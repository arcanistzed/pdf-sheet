[ /*
Shadowrun 5e character sheet mapping for Foundry VTT module 'Export Sheet to PDF' - update 15-02-2022 - Kurko#1535
*/

/* ---------- PAGE 1 ----------*/


    { "pdf": "PlayerName", "foundry": Object.entries(@permission).filter(entry => entry[1] === 3).map(entry => entry[0]).map(id => !game.users.get(id)?.isGM ? game.users.get(id)?.name : null).filter(x => x).join(", ") },

    { "pdf": "CharacterName0", "foundry": @name },
    { "pdf": "CharacterName1", "foundry": @name },
    { "pdf": "CharacterName2", "foundry": @name },

    { "pdf": "StreetCred", "foundry": @data.street_cred},
    { "pdf": "Notoriety", "foundry": @data.notoriety},
    { "pdf": "PAwareness", "foundry": @data.public_awareness},
    { "pdf": "Nuyen", "foundry": @data.nuyen},
    { "pdf": "Karma", "foundry": @data.karma.value},
    { "pdf": "CKarma", "foundry": @data.karma.max},

    { "pdf": "Metatype", "foundry": @data.metatype },


/* CONDITION TRACKS  max. P12/S18/E8  */

    { "pdf": "stun_01", "foundry": @data.track.stun.value >= 1 || ''},
    { "pdf": "stun_02", "foundry": @data.track.stun.value  >= 2 || ''},
    { "pdf": "stun_03", "foundry": @data.track.stun.value  >= 3 || ''},
    { "pdf": "stun_04", "foundry": @data.track.stun.value  >= 4 || ''},
    { "pdf": "stun_05", "foundry": @data.track.stun.value  >= 5 || ''},
    { "pdf": "stun_06", "foundry": @data.track.stun.value  >= 6 || ''},
    { "pdf": "stun_07", "foundry": @data.track.stun.value  >= 7 || ''},
    { "pdf": "stun_08", "foundry": @data.track.stun.value  >= 8 || ''},
    { "pdf": "stun_09", "foundry": @data.track.stun.value  >= 9 || ''},
    { "pdf": "stun_10", "foundry": @data.track.stun.value  >= 10 || ''},
    { "pdf": "stun_11", "foundry": @data.track.stun.value  >= 11 || ''},
    { "pdf": "stun_12", "foundry": @data.track.stun.value  >= 12 || ''},

    { "pdf": "stunMax_09", "foundry": (@data.track.stun.base  < 9) ? '---' : ''},
    { "pdf": "stunMax_10", "foundry": (@data.track.stun.base  < 10) ? '---' : ''},
    { "pdf": "stunMax_11", "foundry": (@data.track.stun.base  < 11) ? '---' : ''},
    { "pdf": "stunMax_12", "foundry": (@data.track.stun.base  < 12) ? '---' : ''},

    { "pdf": "conditionPenalty", "foundry": (@data.modifiers.wound_tolerance < 1)?
'-1                      -2                      -3                      -4                      -5                      -6' :
((@data.modifiers.wound_tolerance === 1)?
'        -1                      -2                      -3                      -4                      -5' :
 ((@data.modifiers.wound_tolerance === 2)?
'                 -1                      -2                      -3                      -4                      -5' :
(@data.modifiers.wound_tolerance === 3)?
'                         -1                      -2                      -3                      -4                      -5' :
 ((@data.modifiers.wound_tolerance === 4)?
'                                 -1                      -2                      -3                      -4' : ''
)))
},

    { "pdf": "phys_01", "foundry": @data.track.physical.value >= 1 || ''},
    { "pdf": "phys_02", "foundry": @data.track.physical.value  >= 2 || ''},
    { "pdf": "phys_03", "foundry": @data.track.physical.value  >= 3 || ''},
    { "pdf": "phys_04", "foundry": @data.track.physical.value  >= 4 || ''},
    { "pdf": "phys_05", "foundry": @data.track.physical.value  >= 5 || ''},
    { "pdf": "phys_06", "foundry": @data.track.physical.value  >= 6 || ''},
    { "pdf": "phys_07", "foundry": @data.track.physical.value  >= 7 || ''},
    { "pdf": "phys_08", "foundry": @data.track.physical.value  >= 8 || ''},
    { "pdf": "phys_09", "foundry": @data.track.physical.value  >= 9 || ''},
    { "pdf": "phys_10", "foundry": @data.track.physical.value  >= 10 || ''},
    { "pdf": "phys_11", "foundry": @data.track.physical.value  >= 11 || ''},
    { "pdf": "phys_12", "foundry": @data.track.physical.value  >= 12 || ''},
    { "pdf": "phys_13", "foundry": @data.track.physical.value  >= 13 || ''},
    { "pdf": "phys_14", "foundry": @data.track.physical.value  >= 14 || ''},
    { "pdf": "phys_15", "foundry": @data.track.physical.value  >= 15 || ''},
    { "pdf": "phys_16", "foundry": @data.track.physical.value  >= 16 || ''},
    { "pdf": "phys_17", "foundry": @data.track.physical.value  >= 17 || ''},
    { "pdf": "phys_18", "foundry": @data.track.physical.value  >= 18 || ''},

    { "pdf": "physMax_09", "foundry": (@data.track.physical.base  < 9) ? '---' : ''},
    { "pdf": "physMax_10", "foundry": (@data.track.physical.base  < 10 ) ? '---' : ''},
    { "pdf": "physMax_11", "foundry": (@data.track.physical.base  < 11 ) ? '---' : ''},
    { "pdf": "physMax_12", "foundry": (@data.track.physical.base  < 12 ) ? '---' : ''},
    { "pdf": "physMax_13", "foundry": (@data.track.physical.base  < 13 ) ? '---' : ''},
    { "pdf": "physMax_14", "foundry": (@data.track.physical.base  < 14 ) ? '---' : ''},
    { "pdf": "physMax_15", "foundry": (@data.track.physical.base  < 15 ) ? '---' : ''},
    { "pdf": "physMax_16", "foundry": (@data.track.physical.base  < 16 ) ? '---' : ''},
    { "pdf": "physMax_17", "foundry": (@data.track.physical.base  < 17 ) ? '---' : ''},
    { "pdf": "physMax_18", "foundry": (@data.track.physical.base  < 18 ) ? '---' : ''},

    { "pdf": "edge_01", "foundry": @data.attributes.edge.uses >= 1 || ''},
    { "pdf": "edge_02", "foundry": @data.attributes.edge.uses >= 2 || ''},
    { "pdf": "edge_03", "foundry": @data.attributes.edge.uses >= 3 || ''},
    { "pdf": "edge_04", "foundry": @data.attributes.edge.uses >= 4 || ''},
    { "pdf": "edge_05", "foundry": @data.attributes.edge.uses >= 5 || ''},
    { "pdf": "edge_06", "foundry": @data.attributes.edge.uses >= 6 || ''},
    { "pdf": "edge_07", "foundry": @data.attributes.edge.uses >= 7 || ''},
    { "pdf": "edge_08", "foundry": @data.attributes.edge.uses >= 8 || ''},

    { "pdf": "edgeMax_02", "foundry": (@data.attributes.edge.value  < 2 ) ? '---' : ''},
    { "pdf": "edgeMax_03", "foundry": (@data.attributes.edge.value  < 3 ) ? '---' : ''},
    { "pdf": "edgeMax_04", "foundry": (@data.attributes.edge.value  < 4 ) ? '---' : ''},
    { "pdf": "edgeMax_05", "foundry": (@data.attributes.edge.value  < 5 ) ? '---' : ''},
    { "pdf": "edgeMax_06", "foundry": (@data.attributes.edge.value  < 6 ) ? '---' : ''},
    { "pdf": "edgeMax_07", "foundry": (@data.attributes.edge.value  < 7 ) ? '---' : ''},
    { "pdf": "edgeMax_08", "foundry": (@data.attributes.edge.value  < 8 ) ? '---' : ''},


/* ATTRIBUTES */

    { "pdf": "Attr_BOD_base", "foundry": @data.attributes.body.base },
    { "pdf": "Attr_AGI_base", "foundry": @data.attributes.agility.base },
    { "pdf": "Attr_REA_base", "foundry": @data.attributes.reaction.base },
    { "pdf": "Attr_STR_base", "foundry": @data.attributes.strength.base },
    { "pdf": "Attr_WIL_base", "foundry": @data.attributes.willpower.base },
    { "pdf": "Attr_LOG_base", "foundry": @data.attributes.logic.base },
    { "pdf": "Attr_INT_base", "foundry": @data.attributes.intuition.base },
    { "pdf": "Attr_CHA_base", "foundry": @data.attributes.charisma.base },
    { "pdf": "Attr_EDG_base", "foundry": @data.attributes.edge.value },
    { "pdf": "Attr_ESS_base", "foundry": @data.attributes.essence.value },
    { "pdf": "Attr_MAG_base", "foundry": @data.attributes.magic.value + @data.attributes.resonance.value -1 },
    { "pdf": "Attr_BOD_value", "foundry": @data.attributes.body.value },
    { "pdf": "Attr_AGI_value", "foundry": @data.attributes.agility.value },
    { "pdf": "Attr_REA_value", "foundry": @data.attributes.reaction.value },
    { "pdf": "Attr_STR_value", "foundry": @data.attributes.strength.value },
    { "pdf": "Attr_WIL_value", "foundry": @data.attributes.willpower.value },
    { "pdf": "Attr_LOG_value", "foundry": @data.attributes.logic.value },
    { "pdf": "Attr_INT_value", "foundry": @data.attributes.intuition.value },
    { "pdf": "Attr_CHA_value", "foundry": @data.attributes.charisma.value },
    { "pdf": "Attr_EDG_value", "foundry": @data.attributes.edge.value },
    { "pdf": "Attr_ESS_value", "foundry": @data.attributes.essence.value },
    { "pdf": "Attr_MAG_value", "foundry": @data.attributes.magic.value + @data.attributes.resonance.value -1 },

    { "pdf": "Overflow_max", "foundry": @data.attributes.body.value },


/* RESIST DRAIN */

    { "pdf": "Defense", "foundry": @data.attributes.reaction.value + @data.attributes.intuition.value },


/* DEFENSE */

    { "pdf": "ResistDrainAttr", "foundry": `${(@data.magic.attribute.toUpperCase()).substring(0,3)})`},
    { "pdf": "ResistDrain", "foundry": @data.attributes.willpower.value + @data.attributes[@data.magic.attribute].value },


/* TESTS */

{ "pdf": "Composure", "foundry": @data.attributes.charisma.value +  @data.attributes.willpower.value },
{ "pdf": "JIntentions", "foundry": @data.attributes.charisma.value +  @data.attributes.intuition.value },
{ "pdf": "Memory", "foundry": @data.attributes.willpower.value +  @data.attributes.logic.value },
{ "pdf": "LiftCarry", "foundry": @data.attributes.strength.value +  @data.attributes.body.value },


/* INITIATIVES */

   { "pdf": "Meat_INI", "foundry": @data.initiative.meatspace.base.base },
    { "pdf": "Meat_INI_dice", "foundry": @data.initiative.meatspace.dice.base + "d6" },

    { "pdf": "Matrix_INI", "foundry": @data.initiative.matrix.base.base },
    { "pdf": "Matrix_INI_dice", "foundry": @data.initiative.matrix.dice.base + "d6" },

    { "pdf": "Astral_INI", "foundry": @data.initiative.astral.base.base },
    { "pdf": "Astral_INI_dice", "foundry": @data.initiative.astral.dice.base + "d6" },


/* MOVEMENT */

    { "pdf": "Walk", "foundry": @data.movement.walk.value },
    { "pdf": "Run", "foundry": @data.movement.run.value },
    { "pdf": "Sprint", "foundry": @data.movement.sprint },


 /* LIMITS */

    { "pdf": "PhysicalLimit", "foundry": @data.limits.physical.value },
    { "pdf": "MentalLimit", "foundry": @data.limits.mental.value },
    { "pdf": "SocialLimit", "foundry": @data.limits.social.value },
    { "pdf": "PhysicalLimit2", "foundry": @data.limits.physical.value },
    { "pdf": "MentalLimit2", "foundry": @data.limits.mental.value },
    { "pdf": "SocialLimit2", "foundry": @data.limits.social.value },


   /* ACTIVE SKILLS */

{ "pdf": "ActiveSkill_1", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[0] || "" },
{ "pdf": "ActiveSkill_1_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[0] || "" },
{ "pdf": "ActiveSkill_1_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[0] || "" },
{ "pdf": "ActiveSkill_2", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[1] || "" },
{ "pdf": "ActiveSkill_2_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[1] || "" },
{ "pdf": "ActiveSkill_2_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[1] || "" },
{ "pdf": "ActiveSkill_3", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[2] || "" },
{ "pdf": "ActiveSkill_3_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[2] || "" },
{ "pdf": "ActiveSkill_3_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[2] || "" },
{ "pdf": "ActiveSkill_4", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[3] || "" },
{ "pdf": "ActiveSkill_4_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[3] || "" },
{ "pdf": "ActiveSkill_4_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[3] || "" },
{ "pdf": "ActiveSkill_5", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[4] || "" },
{ "pdf": "ActiveSkill_5_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[4] || "" },
{ "pdf": "ActiveSkill_5_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[4] || "" },
{ "pdf": "ActiveSkill_6", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[5] || "" },
{ "pdf": "ActiveSkill_6_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[5] || "" },
{ "pdf": "ActiveSkill_6_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[5] || "" },
{ "pdf": "ActiveSkill_7", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[6] || "" },
{ "pdf": "ActiveSkill_7_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[6] || "" },
{ "pdf": "ActiveSkill_7_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[6] || "" },
{ "pdf": "ActiveSkill_8", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[7] || "" },
{ "pdf": "ActiveSkill_8_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[7] || "" },
{ "pdf": "ActiveSkill_8_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[7] || "" },
{ "pdf": "ActiveSkill_9", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[8] || "" },
{ "pdf": "ActiveSkill_9_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[8] || "" },
{ "pdf": "ActiveSkill_9_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[8] || "" },
{ "pdf": "ActiveSkill_10", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[9] || "" },
{ "pdf": "ActiveSkill_10_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[9] || "" },
{ "pdf": "ActiveSkill_10_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[9] || "" },
{ "pdf": "ActiveSkill_11", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[10] || "" },
{ "pdf": "ActiveSkill_11_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[10] || "" },
{ "pdf": "ActiveSkill_11_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[10] || "" },
{ "pdf": "ActiveSkill_12", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[11] || "" },
{ "pdf": "ActiveSkill_12_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[11] || "" },
{ "pdf": "ActiveSkill_12_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[11] || "" },
{ "pdf": "ActiveSkill_13", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[12] || "" },
{ "pdf": "ActiveSkill_13_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[12] || "" },
{ "pdf": "ActiveSkill_13_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[12] || "" },
{ "pdf": "ActiveSkill_14", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[13] || "" },
{ "pdf": "ActiveSkill_14_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[13] || "" },
{ "pdf": "ActiveSkill_14_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[13] || "" },
{ "pdf": "ActiveSkill_15", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[14] || "" },
{ "pdf": "ActiveSkill_15_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[14] || "" },
{ "pdf": "ActiveSkill_15_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[14] || "" },
{ "pdf": "ActiveSkill_16", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[15] || "" },
{ "pdf": "ActiveSkill_16_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[15] || "" },
{ "pdf": "ActiveSkill_16_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[15] || "" },
{ "pdf": "ActiveSkill_17", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[16] || "" },
{ "pdf": "ActiveSkill_17_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[16] || "" },
{ "pdf": "ActiveSkill_17_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[16] || "" },
{ "pdf": "ActiveSkill_18", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[17] || "" },
{ "pdf": "ActiveSkill_18_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[17] || "" },
{ "pdf": "ActiveSkill_18_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[17] || "" },
{ "pdf": "ActiveSkill_19", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[18] || "" },
{ "pdf": "ActiveSkill_19_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[18] || "" },
{ "pdf": "ActiveSkill_19_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[18] || "" },
{ "pdf": "ActiveSkill_20", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [game.i18n.localize(skill.label), `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[19] || "" },
{ "pdf": "ActiveSkill_20_spec", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.specs.join(", ")].filter(x => String(x)).join(" "))[19] || "" },
{ "pdf": "ActiveSkill_20_value", "foundry": Object.values(actor.data.data.skills.active).filter(skill => skill.value !== 0).map(skill => [skill.value + @data.attributes[skill.attribute].value, skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(" "))[19] || "" },


/* LANGUAGES */

{ "pdf": "Language_1", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.name, `(${(lang.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[0] || "" },
{ "pdf": "Language_1_spec", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.specs.join(", ")].filter(x => String(x)).join(" "))[0] || "" },
{ "pdf": "Language_1_value", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.value + @data.attributes[lang.attribute].value, lang.specs.length ? `(${lang.value + 2 + @data.attributes[lang.attribute].value})`: ""].filter(x => String(x)).join(" "))[0] || "" },
{ "pdf": "Language_2", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.name, `(${(lang.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[1] || "" },
{ "pdf": "Language_2_spec", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.specs.join(", ")].filter(x => String(x)).join(" "))[1] || "" },
{ "pdf": "Language_2_value", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.value + @data.attributes[lang.attribute].value, lang.specs.length ? `(${lang.value + 2 + @data.attributes[lang.attribute].value})`: ""].filter(x => String(x)).join(" "))[1] || "" },
{ "pdf": "Language_3", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.name, `(${(lang.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[2] || "" },
{ "pdf": "Language_3_spec", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.specs.join(", ")].filter(x => String(x)).join(" "))[2] || "" },
{ "pdf": "Language_3_value", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.value + @data.attributes[lang.attribute].value, lang.specs.length ? `(${lang.value + 2 + @data.attributes[lang.attribute].value})`: ""].filter(x => String(x)).join(" "))[2] || "" },
{ "pdf": "Language_4", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.name, `(${(lang.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[3] || "" },
{ "pdf": "Language_4_spec", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.specs.join(", ")].filter(x => String(x)).join(" "))[3] || "" },
{ "pdf": "Language_4_value", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.value + @data.attributes[lang.attribute].value, lang.specs.length ? `(${lang.value + 2 + @data.attributes[lang.attribute].value})`: ""].filter(x => String(x)).join(" "))[3] || "" },
{ "pdf": "Language_5", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.name, `(${(lang.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(" "))[4] || "" },
{ "pdf": "Language_5_spec", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.specs.join(", ")].filter(x => String(x)).join(" "))[4] || "" },
{ "pdf": "Language_5_value", "foundry": Object.values(actor.data.data.skills.language.value ).map(lang => [lang.value + @data.attributes[lang.attribute].value, lang.specs.length ? `(${lang.value + 2 + @data.attributes[lang.attribute].value})`: ""].filter(x => String(x)).join(" "))[4] || "" },


/* KNOWLEDGE SKILLS */

{ "pdf": "kSkill0", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.name, `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[0] || "" },
{ "pdf": "kSkill1", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.name, `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[1] || "" },
{ "pdf": "kSkill2", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.name, `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[2] || "" },
{ "pdf": "kSkill3", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.name, `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[3] || "" },
{ "pdf": "kSkill4", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.name, `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[4] || "" },
{ "pdf": "kSkill5", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.name, `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[5] || "" },
{ "pdf": "kSkill6", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.name, `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[6] || "" },
{ "pdf": "kSkill7", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.name, `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[7] || "" },
{ "pdf": "kSkill8", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.name, `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[8] || "" },
{ "pdf": "kSkill9", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.name, `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[9] || "" },
{ "pdf": "kSkill10", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.name, `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[10] || "" },
{ "pdf": "kSkill11", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.name, `(${(skill.attribute.toUpperCase()).substring(0,3)})`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[11] || "" },

{ "pdf": "kSkillSpec0", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.specs.join(", ")] )).flat()[0] || "" },
{ "pdf": "kSkillSpec1", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.specs.join(", ")] )).flat()[1] || "" },
{ "pdf": "kSkillSpec2", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.specs.join(", ")] )).flat()[2] || "" },
{ "pdf": "kSkillSpec3", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.specs.join(", ")] )).flat()[3] || "" },
{ "pdf": "kSkillSpec4", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.specs.join(", ")] )).flat()[4] || "" },
{ "pdf": "kSkillSpec5", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.specs.join(", ")] )).flat()[5] || "" },
{ "pdf": "kSkillSpec6", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.specs.join(", ")] )).flat()[6] || "" },
{ "pdf": "kSkillSpec7", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.specs.join(", ")] )).flat()[7] || "" },
{ "pdf": "kSkillSpec8", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.specs.join(", ")] )).flat()[8] || "" },
{ "pdf": "kSkillSpec9", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.specs.join(", ")] )).flat()[9] || "" },
{ "pdf": "kSkillSpec10", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.specs.join(", ")] )).flat()[10] || "" },
{ "pdf": "kSkillSpec11", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.specs.join(", ")] )).flat()[11] || "" },

{ "pdf": "kSkillCateg0", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [`${(k.toUpperCase()).substring(0,1)}`].filter(x => String(x)).join(" ")) .filter(x => String(x))).flat()[0] || "" },
{ "pdf": "kSkillCateg1", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [`${(k.toUpperCase()).substring(0,1)}`].filter(x => String(x)).join(" ")) .filter(x => String(x))).flat()[1] || "" },
{ "pdf": "kSkillCateg2", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [`${(k.toUpperCase()).substring(0,1)}`].filter(x => String(x)).join(" ")) .filter(x => String(x))).flat()[2] || "" },
{ "pdf": "kSkillCateg3", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [`${(k.toUpperCase()).substring(0,1)}`].filter(x => String(x)).join(" ")) .filter(x => String(x))).flat()[3] || "" },
{ "pdf": "kSkillCateg4", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [`${(k.toUpperCase()).substring(0,1)}`].filter(x => String(x)).join(" ")) .filter(x => String(x))).flat()[4] || "" },
{ "pdf": "kSkillCateg5", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [`${(k.toUpperCase()).substring(0,1)}`].filter(x => String(x)).join(" ")) .filter(x => String(x))).flat()[5] || "" },
{ "pdf": "kSkillCateg6", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [`${(k.toUpperCase()).substring(0,1)}`].filter(x => String(x)).join(" ")) .filter(x => String(x))).flat()[6] || "" },
{ "pdf": "kSkillCateg7", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [`${(k.toUpperCase()).substring(0,1)}`].filter(x => String(x)).join(" ")) .filter(x => String(x))).flat()[7] || "" },
{ "pdf": "kSkillCateg8", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [`${(k.toUpperCase()).substring(0,1)}`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[8] || "" },
{ "pdf": "kSkillCateg9", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [`${(k.toUpperCase()).substring(0,1)}`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[9] || "" },
{ "pdf": "kSkillCateg10", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [`${(k.toUpperCase()).substring(0,1)}`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[10] || "" },
{ "pdf": "kSkillCateg11", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [`${(k.toUpperCase()).substring(0,1)}`].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[11] || "" },
{ "pdf": "kSkillValue0", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.value + @data.attributes[skill.attribute].value ,skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[0] || "" },

{ "pdf": "kSkillValue1", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.value + @data.attributes[skill.attribute].value ,skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[1] || "" },
{ "pdf": "kSkillValue2", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.value + @data.attributes[skill.attribute].value ,skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[2] || "" },
{ "pdf": "kSkillValue3", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.value + @data.attributes[skill.attribute].value ,skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[3] || "" },
{ "pdf": "kSkillValue4", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.value + @data.attributes[skill.attribute].value ,skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[4] || "" },
{ "pdf": "kSkillValue5", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.value + @data.attributes[skill.attribute].value ,skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[5] || "" },
{ "pdf": "kSkillValue6", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.value + @data.attributes[skill.attribute].value ,skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[6] || "" },
{ "pdf": "kSkillValue7", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.value + @data.attributes[skill.attribute].value ,skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[7] || "" },
{ "pdf": "kSkillValue8", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.value + @data.attributes[skill.attribute].value ,skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[8] || "" },
{ "pdf": "kSkillValue9", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.value + @data.attributes[skill.attribute].value ,skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[9] || "" },
{ "pdf": "kSkillValue10", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.value + @data.attributes[skill.attribute].value ,skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[10] || "" },
{ "pdf": "kSkillValue11", "foundry": Object.keys(actor.data.data.skills.knowledge ).map(k => Object.values(actor.data.data.skills.knowledge[k].value).map(skill => [skill.value + @data.attributes[skill.attribute].value ,skill.specs.length ? `(${skill.value + 2 + @data.attributes[skill.attribute].value})`: ""].filter(x => String(x)).join(' ')) .filter(x => String(x))).flat()[11] || "" },


/* ---------- PAGE 2 ----------*/

/* SPELLS */ 

{ "pdf": "Spell0", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[0] || "" },
{ "pdf": "Spell1", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[1] || "" },
{ "pdf": "Spell2", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[2] || "" },
{ "pdf": "Spell3", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[3] || "" },
{ "pdf": "Spell4", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[4] || "" },
{ "pdf": "Spell5", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[5] || "" },
{ "pdf": "Spell6", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[6] || "" },
{ "pdf": "Spell7", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[7] || "" },
{ "pdf": "Spell8", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[8] || "" },
{ "pdf": "Spell9", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[9] || "" },
{ "pdf": "Spell10", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[10] || "" },
{ "pdf": "Spell11", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[11] || "" },
{ "pdf": "Spell12", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[12] || "" },
{ "pdf": "Spell13", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[13] || "" },
{ "pdf": "Spell14", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[14] || "" },
{ "pdf": "Spell15", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[15] || "" },
{ "pdf": "Spell16", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[16] || "" },
{ "pdf": "Spell17", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[17] || "" },
{ "pdf": "Spell18", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[18] || "" },
{ "pdf": "Spell19", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[19] || "" },
{ "pdf": "Spell20", "foundry": @items .filter(i => i.type === "spell").map(i => [i.name])[20] || "" },

{ "pdf": "SpellRule0", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[0] || "" },
{ "pdf": "SpellRule1", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[1] || "" },
{ "pdf": "SpellRule2", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[2] || "" },
{ "pdf": "SpellRule3", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[3] || "" },
{ "pdf": "SpellRule4", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[4] || "" },
{ "pdf": "SpellRule5", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[5] || "" },
{ "pdf": "SpellRule6", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[6] || "" },
{ "pdf": "SpellRule7", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[7] || "" },
{ "pdf": "SpellRule8", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[8] || "" },
{ "pdf": "SpellRule9", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[9] || "" },
{ "pdf": "SpellRule10", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[10] || "" },
{ "pdf": "SpellRule11", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[11] || "" },
{ "pdf": "SpellRule12", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[12] || "" },
{ "pdf": "SpellRule13", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[13] || "" },
{ "pdf": "SpellRule14", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[14] || "" },
{ "pdf": "SpellRule15", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[15] || "" },
{ "pdf": "SpellRule16", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[16] || "" },
{ "pdf": "SpellRule17", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[17] || "" },
{ "pdf": "SpellRule18", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[18] || "" },
{ "pdf": "SpellRule19", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[19] || "" },
{ "pdf": "SpellRule20", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.description.source])[20] || "" },

{ "pdf": "SpellCateg0", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[0] || "" },
{ "pdf": "SpellCateg1", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[1] || "" },
{ "pdf": "SpellCateg2", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[2] || "" },
{ "pdf": "SpellCateg3", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[3] || "" },
{ "pdf": "SpellCateg4", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[4] || "" },
{ "pdf": "SpellCateg5", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[5] || "" },
{ "pdf": "SpellCateg6", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[6] || "" },
{ "pdf": "SpellCateg7", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[7] || "" },
{ "pdf": "SpellCateg8", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[8] || "" },
{ "pdf": "SpellCateg9", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[9] || "" },
{ "pdf": "SpellCateg10", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[10] || "" },
{ "pdf": "SpellCateg11", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[11] || "" },
{ "pdf": "SpellCateg12", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[12] || "" },
{ "pdf": "SpellCateg13", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[13] || "" },
{ "pdf": "SpellCateg14", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[14] || "" },
{ "pdf": "SpellCateg15", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[15] || "" },
{ "pdf": "SpellCateg16", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[16] || "" },
{ "pdf": "SpellCateg17", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[17] || "" },
{ "pdf": "SpellCateg18", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[18] || "" },
{ "pdf": "SpellCateg19", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[19] || "" },
{ "pdf": "SpellCateg20", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.category])[20] || "" },

{ "pdf": "SpellType0", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[0] || "" },
{ "pdf": "SpellType1", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[1] || "" },
{ "pdf": "SpellType2", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[2] || "" },
{ "pdf": "SpellType3", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[3] || "" },
{ "pdf": "SpellType4", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[4] || "" },
{ "pdf": "SpellType5", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[5] || "" },
{ "pdf": "SpellType6", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[6] || "" },
{ "pdf": "SpellType7", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[7] || "" },
{ "pdf": "SpellType8", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[8] || "" },
{ "pdf": "SpellType9", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[9] || "" },
{ "pdf": "SpellType10", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[10] || "" },
{ "pdf": "SpellType11", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[11] || "" },
{ "pdf": "SpellType12", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[12] || "" },
{ "pdf": "SpellType13", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[13] || "" },
{ "pdf": "SpellType14", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[14] || "" },
{ "pdf": "SpellType15", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[15] || "" },
{ "pdf": "SpellType16", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[16] || "" },
{ "pdf": "SpellType17", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[17] || "" },
{ "pdf": "SpellType18", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[18] || "" },
{ "pdf": "SpellType19", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[19] || "" },
{ "pdf": "SpellType20", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.type])[20] || "" },

{ "pdf": "SpellRng0", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[0] || "" },
{ "pdf": "SpellRng1", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[1] || "" },
{ "pdf": "SpellRng2", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[2] || "" },
{ "pdf": "SpellRng3", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[3] || "" },
{ "pdf": "SpellRng4", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[4] || "" },
{ "pdf": "SpellRng5", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[5] || "" },
{ "pdf": "SpellRng6", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[6] || "" },
{ "pdf": "SpellRng7", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[7] || "" },
{ "pdf": "SpellRng8", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[8] || "" },
{ "pdf": "SpellRng9", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[9] || "" },
{ "pdf": "SpellRng10", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[10] || "" },
{ "pdf": "SpellRng11", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[11] || "" },
{ "pdf": "SpellRng12", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[12] || "" },
{ "pdf": "SpellRng13", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[13] || "" },
{ "pdf": "SpellRng14", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[14] || "" },
{ "pdf": "SpellRng15", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[15] || "" },
{ "pdf": "SpellRng16", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[16] || "" },
{ "pdf": "SpellRng17", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[17] || "" },
{ "pdf": "SpellRng18", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[18] || "" },
{ "pdf": "SpellRng19", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[19] || "" },
{ "pdf": "SpellRng20", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.range])[20] || "" },

{ "pdf": "SpellDur0", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[0] || "" },
{ "pdf": "SpellDur1", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[1] || "" },
{ "pdf": "SpellDur2", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[2] || "" },
{ "pdf": "SpellDur3", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[3] || "" },
{ "pdf": "SpellDur4", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[4] || "" },
{ "pdf": "SpellDur5", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[5] || "" },
{ "pdf": "SpellDur6", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[6] || "" },
{ "pdf": "SpellDur7", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[7] || "" },
{ "pdf": "SpellDur8", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[8] || "" },
{ "pdf": "SpellDur9", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[9] || "" },
{ "pdf": "SpellDur10", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[10] || "" },
{ "pdf": "SpellDur11", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[11] || "" },
{ "pdf": "SpellDur12", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[12] || "" },
{ "pdf": "SpellDur13", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[13] || "" },
{ "pdf": "SpellDur14", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[14] || "" },
{ "pdf": "SpellDur15", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[15] || "" },
{ "pdf": "SpellDur16", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[16] || "" },
{ "pdf": "SpellDur17", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[17] || "" },
{ "pdf": "SpellDur18", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[18] || "" },
{ "pdf": "SpellDur19", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[19] || "" },
{ "pdf": "SpellDur20", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.duration])[20] || "" },

{ "pdf": "SpellDrain0", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[0] || "" },
{ "pdf": "SpellDrain1", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[1] || "" },
{ "pdf": "SpellDrain2", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[2] || "" },
{ "pdf": "SpellDrain3", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[3] || "" },
{ "pdf": "SpellDrain4", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[4] || "" },
{ "pdf": "SpellDrain5", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[5] || "" },
{ "pdf": "SpellDrain6", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[6] || "" },
{ "pdf": "SpellDrain7", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[7] || "" },
{ "pdf": "SpellDrain8", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[8] || "" },
{ "pdf": "SpellDrain9", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[9] || "" },
{ "pdf": "SpellDrain10", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[10] || "" },
{ "pdf": "SpellDrain11", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[11] || "" },
{ "pdf": "SpellDrain12", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[12] || "" },
{ "pdf": "SpellDrain13", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[13] || "" },
{ "pdf": "SpellDrain14", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[14] || "" },
{ "pdf": "SpellDrain15", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[15] || "" },
{ "pdf": "SpellDrain16", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[16] || "" },
{ "pdf": "SpellDrain17", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[17] || "" },
{ "pdf": "SpellDrain18", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[18] || "" },
{ "pdf": "SpellDrain19", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[19] || "" },
{ "pdf": "SpellDrain20", "foundry": @items .filter(i => i.type === "spell").map(i => [i.data.data.drain? "F" + i.data.data.drain : "F"] )[20] || "" },


/* ADEPT POWERS */ 

{ "pdf": "Power0", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[0] || "" },
{ "pdf": "Power1", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[1] || "" },
{ "pdf": "Power2", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[2] || "" },
{ "pdf": "Power3", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[3] || "" },
{ "pdf": "Power4", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[4] || "" },
{ "pdf": "Power5", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[5] || "" },
{ "pdf": "Power6", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[6] || "" },
{ "pdf": "Power7", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[7] || "" },
{ "pdf": "Power8", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[8] || "" },
{ "pdf": "Power9", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[9] || "" },
{ "pdf": "Power10", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[10] || "" },
{ "pdf": "Power11", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[11] || "" },
{ "pdf": "Power12", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[12] || "" },
{ "pdf": "Power13", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[13] || "" },
{ "pdf": "Power14", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.name])[14] || "" },

{ "pdf": "PowerRule0", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[0] || "" },
{ "pdf": "PowerRule1", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[1] || "" },
{ "pdf": "PowerRule2", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[2] || "" },
{ "pdf": "PowerRule3", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[3] || "" },
{ "pdf": "PowerRule4", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[4] || "" },
{ "pdf": "PowerRule5", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[5] || "" },
{ "pdf": "PowerRule6", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[6] || "" },
{ "pdf": "PowerRule7", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[7] || "" },
{ "pdf": "PowerRule8", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[8] || "" },
{ "pdf": "PowerRule9", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[9] || "" },
{ "pdf": "PowerRule10", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[10] || "" },
{ "pdf": "PowerRule11", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[11] || "" },
{ "pdf": "PowerRule12", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[12] || "" },
{ "pdf": "PowerRule13", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[13] || "" },
{ "pdf": "PowerRule14", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.description.source])[14] || "" },

{ "pdf": "PowerType0", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[0] || "" },
{ "pdf": "PowerType1", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[1] || "" },
{ "pdf": "PowerType2", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[2] || "" },
{ "pdf": "PowerType3", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[3] || "" },
{ "pdf": "PowerType4", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[4] || "" },
{ "pdf": "PowerType5", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[5] || "" },
{ "pdf": "PowerType6", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[6] || "" },
{ "pdf": "PowerType7", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[7] || "" },
{ "pdf": "PowerType8", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[8] || "" },
{ "pdf": "PowerType9", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[9] || "" },
{ "pdf": "PowerType10", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[10] || "" },
{ "pdf": "PowerType11", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[11] || "" },
{ "pdf": "PowerType12", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[12] || "" },
{ "pdf": "PowerType13", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[13] || "" },
{ "pdf": "PowerType14", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.type])[14] || "" },

{ "pdf": "PowerPoints0", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[0] || "" },
{ "pdf": "PowerPoints1", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[1] || "" },
{ "pdf": "PowerPoints2", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[2] || "" },
{ "pdf": "PowerPoints3", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[3] || "" },
{ "pdf": "PowerPoints4", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[4] || "" },
{ "pdf": "PowerPoints5", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[5] || "" },
{ "pdf": "PowerPoints6", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[6] || "" },
{ "pdf": "PowerPoints7", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[7] || "" },
{ "pdf": "PowerPoints8", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[8] || "" },
{ "pdf": "PowerPoints9", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[9] || "" },
{ "pdf": "PowerPoints10", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[10] || "" },
{ "pdf": "PowerPoints11", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[11] || "" },
{ "pdf": "PowerPoints12", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[12] || "" },
{ "pdf": "PowerPoints13", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[13] || "" },
{ "pdf": "PowerPoints14", "foundry": @items .filter(i => i.type === "adept_power").map(i => [i.data.data.pp])[14] || "" },

/* Adept Power Drain not implemented */


/* QUALITIES */ 

{ "pdf": "Quality0", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[0] || "" },
{ "pdf": "Quality1", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[1] || "" },
{ "pdf": "Quality2", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[2] || "" },
{ "pdf": "Quality3", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[3] || "" },
{ "pdf": "Quality4", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[4] || "" },
{ "pdf": "Quality5", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[5] || "" },
{ "pdf": "Quality6", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[6] || "" },
{ "pdf": "Quality7", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[7] || "" },
{ "pdf": "Quality8", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[8] || "" },
{ "pdf": "Quality9", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[9] || "" },
{ "pdf": "Quality10", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[10] || "" },
{ "pdf": "Quality11", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[11] || "" },
{ "pdf": "Quality12", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[12] || "" },
{ "pdf": "Quality13", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[13] || "" },
{ "pdf": "Quality14", "foundry": @items .filter(i => i.type === "quality").map(i => [i.name])[14] || "" },

{ "pdf": "QuRule0", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[0] || "" },
{ "pdf": "QuRule1", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[1] || "" },
{ "pdf": "QuRule2", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[2] || "" },
{ "pdf": "QuRule3", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[3] || "" },
{ "pdf": "QuRule4", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[4] || "" },
{ "pdf": "QuRule5", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[5] || "" },
{ "pdf": "QuRule6", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[6] || "" },
{ "pdf": "QuRule7", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[7] || "" },
{ "pdf": "QuRule8", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[8] || "" },
{ "pdf": "QuRule9", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[9] || "" },
{ "pdf": "QuRule10", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[10] || "" },
{ "pdf": "QuRule11", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[11] || "" },
{ "pdf": "QuRule12", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[12] || "" },
{ "pdf": "QuRule13", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[13] || "" },
{ "pdf": "QuRule14", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.description.source])[14] || "" },

{ "pdf": "QuType0", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[0] || "" },
{ "pdf": "QuType1", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[1] || "" },
{ "pdf": "QuType2", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[2] || "" },
{ "pdf": "QuType3", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[3] || "" },
{ "pdf": "QuType4", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[4] || "" },
{ "pdf": "QuType5", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[5] || "" },
{ "pdf": "QuType6", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[6] || "" },
{ "pdf": "QuType7", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[7] || "" },
{ "pdf": "QuType8", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[8] || "" },
{ "pdf": "QuType9", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[9] || "" },
{ "pdf": "QuType10", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[10] || "" },
{ "pdf": "QuType11", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[11] || "" },
{ "pdf": "QuType12", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[12] || "" },
{ "pdf": "QuType13", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[13] || "" },
{ "pdf": "QuType14", "foundry": @items .filter(i => i.type === "quality").map(i => [i.data.data.type])[14] || "" },


/* ---------- PAGE 3 ----------*/

/* SINS */ 

{ "pdf": "SIN0", "foundry": @items .filter(i => i.type === "sin").map(i => [i.name])[0] || "" },
{ "pdf": "SIN1", "foundry": @items .filter(i => i.type === "sin").map(i => [i.name])[1] || "" },
{ "pdf": "SIN2", "foundry": @items .filter(i => i.type === "sin").map(i => [i.name])[2] || "" },
{ "pdf": "SIN3", "foundry": @items .filter(i => i.type === "sin").map(i => [i.name])[3] || "" },
{ "pdf": "SIN4", "foundry": @items .filter(i => i.type === "sin").map(i => [i.name])[4] || "" },

{ "pdf": "SINrule0", "foundry": @items .filter(i => i.type === "sin").map(i => [`SR5 444`])[0] || "" },
{ "pdf": "SINrule1", "foundry": @items .filter(i => i.type === "sin").map(i => [`SR5 444`])[1] || "" },
{ "pdf": "SINrule2", "foundry": @items .filter(i => i.type === "sin").map(i => [`SR5 444`])[2] || "" },
{ "pdf": "SINrule3", "foundry": @items .filter(i => i.type === "sin").map(i => [`SR5 444`])[3] || "" },
{ "pdf": "SINrule4", "foundry": @items .filter(i => i.type === "sin").map(i => [`SR5 444`])[4] || "" },

{ "pdf": "SINrtg0", "foundry": @items .filter(i => i.type === "sin").map(i => [i.data.data.technology.rating])[0] || "" },
{ "pdf": "SINrtg1", "foundry": @items .filter(i => i.type === "sin").map(i => [i.data.data.technology.rating])[1] || "" },
{ "pdf": "SINrtg2", "foundry": @items .filter(i => i.type === "sin").map(i => [i.data.data.technology.rating])[2] || "" },
{ "pdf": "SINrtg3", "foundry": @items .filter(i => i.type === "sin").map(i => [i.data.data.technology.rating])[3] || "" },
{ "pdf": "SINrtg4", "foundry": @items .filter(i => i.type === "sin").map(i => [i.data.data.technology.rating])[4] || "" },


/* LIFESTYLES */ 

{ "pdf": "Lifestyle0", "foundry": @items .filter(i => i.type === "lifestyle").map(i => [i.name])[0] || "" },
{ "pdf": "Lifestyle1", "foundry": @items .filter(i => i.type === "lifestyle").map(i => [i.name])[1] || "" },
{ "pdf": "Lifestyle2", "foundry": @items .filter(i => i.type === "lifestyle").map(i => [i.name])[2] || "" },

{ "pdf": "LifeRule0", "foundry": @items .filter(i => i.type === "lifestyle").map(i => [`SR5 373`])[0] || "" },
{ "pdf": "LifeRule1", "foundry": @items .filter(i => i.type === "lifestyle").map(i => [`SR5 373`])[1] || "" },
{ "pdf": "LifeRule2", "foundry": @items .filter(i => i.type === "lifestyle").map(i => [`SR5 373`])[2] || "" },

{ "pdf": "LifeType0", "foundry": @items .filter(i => i.type === "lifestyle").map(i => [i.data.data.type])[0] || "" },
{ "pdf": "LifeType1", "foundry": @items .filter(i => i.type === "lifestyle").map(i => [i.data.data.type])[1] || "" },
{ "pdf": "LifeType2", "foundry": @items .filter(i => i.type === "lifestyle").map(i => [i.data.data.type])[2] || "" },


/* CONTACTS */ 

{ "pdf": "Contact0", "foundry": @items .filter(i => i.type === "contact").map(i => [i.name])[0] || "" },
{ "pdf": "Contact1", "foundry": @items .filter(i => i.type === "contact").map(i => [i.name])[1] || "" },
{ "pdf": "Contact2", "foundry": @items .filter(i => i.type === "contact").map(i => [i.name])[2] || "" },
{ "pdf": "Contact3", "foundry": @items .filter(i => i.type === "contact").map(i => [i.name])[3] || "" },
{ "pdf": "Contact4", "foundry": @items .filter(i => i.type === "contact").map(i => [i.name])[4] || "" },
{ "pdf": "Contact5", "foundry": @items .filter(i => i.type === "contact").map(i => [i.name])[5] || "" },
{ "pdf": "Contact6", "foundry": @items .filter(i => i.type === "contact").map(i => [i.name])[6] || "" },

{ "pdf": "ContType0", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.type])[0] || "" },
{ "pdf": "ContType1", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.type])[1] || "" },
{ "pdf": "ContType2", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.type])[2] || "" },
{ "pdf": "ContType3", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.type])[3] || "" },
{ "pdf": "ContType4", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.type])[4] || "" },
{ "pdf": "ContType5", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.type])[5] || "" },
{ "pdf": "ContType6", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.type])[6] || "" },

{ "pdf": "ContConn0", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.connection])[0] || "" },
{ "pdf": "ContConn1", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.connection])[1] || "" },
{ "pdf": "ContConn2", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.connection])[2] || "" },
{ "pdf": "ContConn3", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.connection])[3] || "" },
{ "pdf": "ContConn4", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.connection])[4] || "" },
{ "pdf": "ContConn5", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.connection])[5] || "" },
{ "pdf": "ContConn6", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.connection])[6] || "" },

{ "pdf": "ContLoy0", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.loyalty])[0] || "" },
{ "pdf": "ContLoy1", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.loyalty])[1] || "" },
{ "pdf": "ContLoy2", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.loyalty])[2] || "" },
{ "pdf": "ContLoy3", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.loyalty])[3] || "" },
{ "pdf": "ContLoy4", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.loyalty])[4] || "" },
{ "pdf": "ContLoy5", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.loyalty])[5] || "" },
{ "pdf": "ContLoy6", "foundry": @items .filter(i => i.type === "contact").map(i => [i.data.data.loyalty])[6] || "" },


/* WEAPONS RANGED */ 

{ "pdf": "Weapon0", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.name] )[0] || "" },
{ "pdf": "Weapon1", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.name] )[1] || "" },
{ "pdf": "Weapon2", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.name] )[2] || "" },
{ "pdf": "Weapon3", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.name] )[3] || "" },
{ "pdf": "Weapon4", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.name] )[4] || "" },
{ "pdf": "Weapon5", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.name] )[5] || "" },

{ "pdf": "WRule0", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.description.source] )[0] || "" },
{ "pdf": "WRule1", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.description.source] )[1] || "" },
{ "pdf": "WRule2", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.description.source] )[2] || "" },
{ "pdf": "WRule3", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.description.source] )[3] || "" },
{ "pdf": "WRule4", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.description.source] )[4] || "" },
{ "pdf": "WRule5", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.description.source] )[5] || "" },

{ "pdf": "Wmodes0", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.range.modes.single_shot.toString().replace('true', 'SS').replace('false', ''), i.data.data.range.modes.semi_auto.toString().replace('true', 'SA').replace('false', ''), i.data.data.range.modes.burst_fire.toString().replace('true', 'BF').replace('false', ''), i.data.data.range.modes.full_auto.toString().replace('true', 'FA').replace('false', '')].filter(x => String(x)).join(" "))[0] || "" },
{ "pdf": "Wmodes1", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.range.modes.single_shot.toString().replace('true', 'SS').replace('false', ''), i.data.data.range.modes.semi_auto.toString().replace('true', 'SA').replace('false', ''), i.data.data.range.modes.burst_fire.toString().replace('true', 'BF').replace('false', ''), i.data.data.range.modes.full_auto.toString().replace('true', 'FA').replace('false', '')].filter(x => String(x)).join(" "))[1] || "" },
{ "pdf": "Wmodes2", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.range.modes.single_shot.toString().replace('true', 'SS').replace('false', ''), i.data.data.range.modes.semi_auto.toString().replace('true', 'SA').replace('false', ''), i.data.data.range.modes.burst_fire.toString().replace('true', 'BF').replace('false', ''), i.data.data.range.modes.full_auto.toString().replace('true', 'FA').replace('false', '')].filter(x => String(x)).join(" "))[2] || "" },
{ "pdf": "Wmodes3", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.range.modes.single_shot.toString().replace('true', 'SS').replace('false', ''), i.data.data.range.modes.semi_auto.toString().replace('true', 'SA').replace('false', ''), i.data.data.range.modes.burst_fire.toString().replace('true', 'BF').replace('false', ''), i.data.data.range.modes.full_auto.toString().replace('true', 'FA').replace('false', '')].filter(x => String(x)).join(" "))[3] || "" },
{ "pdf": "Wmodes4", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.range.modes.single_shot.toString().replace('true', 'SS').replace('false', ''), i.data.data.range.modes.semi_auto.toString().replace('true', 'SA').replace('false', ''), i.data.data.range.modes.burst_fire.toString().replace('true', 'BF').replace('false', ''), i.data.data.range.modes.full_auto.toString().replace('true', 'FA').replace('false', '')].filter(x => String(x)).join(" "))[4] || "" },
{ "pdf": "Wmodes5", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.range.modes.single_shot.toString().replace('true', 'SS').replace('false', ''), i.data.data.range.modes.semi_auto.toString().replace('true', 'SA').replace('false', ''), i.data.data.range.modes.burst_fire.toString().replace('true', 'BF').replace('false', ''), i.data.data.range.modes.full_auto.toString().replace('true', 'FA').replace('false', '')].filter(x => String(x)).join(" "))[5] || "" },

{ "pdf": "Wacc0", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.limit.value] )[0] || "" },
{ "pdf": "Wacc1", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.limit.value] )[1] || "" },
{ "pdf": "Wacc2", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.limit.value] )[2] || "" },
{ "pdf": "Wacc3", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.limit.value] )[3] || "" },
{ "pdf": "Wacc4", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.limit.value] )[4] || "" },
{ "pdf": "Wacc5", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.limit.value] )[5] || "" },

{ "pdf": "WdvT0", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','')].filter(x => String(x)).join(" "))[0] || "" },
{ "pdf": "WdvT1", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','')].filter(x => String(x)).join(" "))[1] || "" },
{ "pdf": "WdvT2", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','')].filter(x => String(x)).join(" "))[2] || "" },
{ "pdf": "WdvT3", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','')].filter(x => String(x)).join(" "))[3] || "" },
{ "pdf": "WdvT4", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','')].filter(x => String(x)).join(" "))[4] || "" },
{ "pdf": "WdvT5", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','')].filter(x => String(x)).join(" "))[5] || "" },

{ "pdf": "Wap0", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.damage.ap.value] )[0] || "" },
{ "pdf": "Wap1", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.damage.ap.value] )[1] || "" },
{ "pdf": "Wap2", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.damage.ap.value] )[2] || "" },
{ "pdf": "Wap3", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.damage.ap.value] )[3] || "" },
{ "pdf": "Wap4", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.damage.ap.value] )[4] || "" },
{ "pdf": "Wap5", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.action.damage.ap.value] )[5] || "" },

{ "pdf": "Wrc0", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.range.rc.value] )[0] || "" },
{ "pdf": "Wrc1", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.range.rc.value] )[1] || "" },
{ "pdf": "Wrc2", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.range.rc.value] )[2] || "" },
{ "pdf": "Wrc3", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.range.rc.value] )[3] || "" },
{ "pdf": "Wrc4", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.range.rc.value] )[4] || "" },
{ "pdf": "Wrc5", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category === "range").map(i => [i.data.data.range.rc.value] )[5] || "" },


/* WEAPONS MELEE & THROWN */ 

{ "pdf": "WeaponMT0", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.name] )[0] || "" },
{ "pdf": "WeaponMT1", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.name] )[1] || "" },
{ "pdf": "WeaponMT2", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.name] )[2] || "" },
{ "pdf": "WeaponMT3", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.name] )[3] || "" },
{ "pdf": "WeaponMT4", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.name] )[4] || "" },
{ "pdf": "WeaponMT5", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.name] )[5] || "" },
{ "pdf": "WeaponMT6", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.name] )[6] || "" },
{ "pdf": "WeaponMT7", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.name] )[7] || "" },
{ "pdf": "WeaponMT8", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.name] )[8] || "" },
{ "pdf": "WeaponMT9", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.name] )[9] || "" },

{ "pdf": "WRuleMT0", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.description.source] )[0] || "" },
{ "pdf": "WRuleMT1", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.description.source] )[1] || "" },
{ "pdf": "WRuleMT2", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.description.source] )[2] || "" },
{ "pdf": "WRuleMT3", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.description.source] )[3] || "" },
{ "pdf": "WRuleMT4", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.description.source] )[4] || "" },
{ "pdf": "WRuleMT5", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.description.source] )[5] || "" },
{ "pdf": "WRuleMT6", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.description.source] )[6] || "" },
{ "pdf": "WRuleMT7", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.description.source] )[7] || "" },
{ "pdf": "WRuleMT8", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.description.source] )[8] || "" },
{ "pdf": "WRuleMT9", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.description.source] )[9] || "" },

{ "pdf": "WReach0", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[i.data.data.melee.reach.toString().replace('0','') || [@data.attributes.strength.value * i.data.data.thrown.ranges.short, @data.attributes.strength.value * i.data.data.thrown.ranges.medium, @data.attributes.strength.value * i.data.data.thrown.ranges.long, @data.attributes.strength.value * i.data.data.thrown.ranges.extreme] .filter(x => String(x)).join(" / ") .replace('0 / 0 / 0 / 0','')]  )[0] || "" },
{ "pdf": "WReach1", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[i.data.data.melee.reach.toString().replace('0','') || [@data.attributes.strength.value * i.data.data.thrown.ranges.short, @data.attributes.strength.value * i.data.data.thrown.ranges.medium, @data.attributes.strength.value * i.data.data.thrown.ranges.long, @data.attributes.strength.value * i.data.data.thrown.ranges.extreme] .filter(x => String(x)).join(" / ") .replace('0 / 0 / 0 / 0','')]  )[1] || "" },
{ "pdf": "WReach2", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[i.data.data.melee.reach.toString().replace('0','') || [@data.attributes.strength.value * i.data.data.thrown.ranges.short, @data.attributes.strength.value * i.data.data.thrown.ranges.medium, @data.attributes.strength.value * i.data.data.thrown.ranges.long, @data.attributes.strength.value * i.data.data.thrown.ranges.extreme] .filter(x => String(x)).join(" / ") .replace('0 / 0 / 0 / 0','')]  )[2] || "" },
{ "pdf": "WReach3", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[i.data.data.melee.reach.toString().replace('0','') || [@data.attributes.strength.value * i.data.data.thrown.ranges.short, @data.attributes.strength.value * i.data.data.thrown.ranges.medium, @data.attributes.strength.value * i.data.data.thrown.ranges.long, @data.attributes.strength.value * i.data.data.thrown.ranges.extreme] .filter(x => String(x)).join(" / ") .replace('0 / 0 / 0 / 0','')]  )[3] || "" },
{ "pdf": "WReach4", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[i.data.data.melee.reach.toString().replace('0','') || [@data.attributes.strength.value * i.data.data.thrown.ranges.short, @data.attributes.strength.value * i.data.data.thrown.ranges.medium, @data.attributes.strength.value * i.data.data.thrown.ranges.long, @data.attributes.strength.value * i.data.data.thrown.ranges.extreme] .filter(x => String(x)).join(" / ") .replace('0 / 0 / 0 / 0','')]  )[4] || "" },
{ "pdf": "WReach5", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[i.data.data.melee.reach.toString().replace('0','') || [@data.attributes.strength.value * i.data.data.thrown.ranges.short, @data.attributes.strength.value * i.data.data.thrown.ranges.medium, @data.attributes.strength.value * i.data.data.thrown.ranges.long, @data.attributes.strength.value * i.data.data.thrown.ranges.extreme] .filter(x => String(x)).join(" / ") .replace('0 / 0 / 0 / 0','')]  )[5] || "" },
{ "pdf": "WReach6", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[i.data.data.melee.reach.toString().replace('0','') || [@data.attributes.strength.value * i.data.data.thrown.ranges.short, @data.attributes.strength.value * i.data.data.thrown.ranges.medium, @data.attributes.strength.value * i.data.data.thrown.ranges.long, @data.attributes.strength.value * i.data.data.thrown.ranges.extreme] .filter(x => String(x)).join(" / ") .replace('0 / 0 / 0 / 0','')]  )[6] || "" },
{ "pdf": "WReach7", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[i.data.data.melee.reach.toString().replace('0','') || [@data.attributes.strength.value * i.data.data.thrown.ranges.short, @data.attributes.strength.value * i.data.data.thrown.ranges.medium, @data.attributes.strength.value * i.data.data.thrown.ranges.long, @data.attributes.strength.value * i.data.data.thrown.ranges.extreme] .filter(x => String(x)).join(" / ") .replace('0 / 0 / 0 / 0','')]  )[7] || "" },
{ "pdf": "WReach8", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[i.data.data.melee.reach.toString().replace('0','') || [@data.attributes.strength.value * i.data.data.thrown.ranges.short, @data.attributes.strength.value * i.data.data.thrown.ranges.medium, @data.attributes.strength.value * i.data.data.thrown.ranges.long, @data.attributes.strength.value * i.data.data.thrown.ranges.extreme] .filter(x => String(x)).join(" / ") .replace('0 / 0 / 0 / 0','')]  )[8] || "" },
{ "pdf": "WReach9", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[i.data.data.melee.reach.toString().replace('0','') || [@data.attributes.strength.value * i.data.data.thrown.ranges.short, @data.attributes.strength.value * i.data.data.thrown.ranges.medium, @data.attributes.strength.value * i.data.data.thrown.ranges.long, @data.attributes.strength.value * i.data.data.thrown.ranges.extreme] .filter(x => String(x)).join(" / ") .replace('0 / 0 / 0 / 0','')]  )[9] || "" },

{ "pdf": "WaccMT0", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.limit.value].toString().replace('0','-') )[0] || "" },
{ "pdf": "WaccMT1", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.limit.value].toString().replace('0','-') )[1] || "" },
{ "pdf": "WaccMT2", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.limit.value].toString().replace('0','-') )[2] || "" },
{ "pdf": "WaccMT3", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.limit.value].toString().replace('0','-') )[3] || "" },
{ "pdf": "WaccMT4", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.limit.value].toString().replace('0','-') )[4] || "" },
{ "pdf": "WaccMT5", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.limit.value].toString().replace('0','-') )[5] || "" },
{ "pdf": "WaccMT6", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.limit.value].toString().replace('0','-') )[6] || "" },
{ "pdf": "WaccMT7", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.limit.value].toString().replace('0','-') )[7] || "" },
{ "pdf": "WaccMT8", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.limit.value].toString().replace('0','-') )[8] || "" },
{ "pdf": "WaccMT9", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.limit.value].toString().replace('0','-') )[9] || "" },

{ "pdf": "WattrdvMT0", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[[`${(i.data.data.action.damage.attribute.toUpperCase()).substring(0,3)}`, i.data.data.action.damage.attribute ? "+" : ""].join(""), i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','') ].filter(x => String(x)).join(" "))[0] || "" },
{ "pdf": "WattrdvMT1", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[[`${(i.data.data.action.damage.attribute.toUpperCase()).substring(0,3)}`, i.data.data.action.damage.attribute ? "+" : ""].join(""), i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','') ].filter(x => String(x)).join(" "))[1] || "" },
{ "pdf": "WattrdvMT2", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[[`${(i.data.data.action.damage.attribute.toUpperCase()).substring(0,3)}`, i.data.data.action.damage.attribute ? "+" : ""].join(""), i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','') ].filter(x => String(x)).join(" "))[2] || "" },
{ "pdf": "WattrdvMT3", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[[`${(i.data.data.action.damage.attribute.toUpperCase()).substring(0,3)}`, i.data.data.action.damage.attribute ? "+" : ""].join(""), i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','') ].filter(x => String(x)).join(" "))[3] || "" },
{ "pdf": "WattrdvMT4", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[[`${(i.data.data.action.damage.attribute.toUpperCase()).substring(0,3)}`, i.data.data.action.damage.attribute ? "+" : ""].join(""), i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','') ].filter(x => String(x)).join(" "))[4] || "" },
{ "pdf": "WattrdvMT5", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[[`${(i.data.data.action.damage.attribute.toUpperCase()).substring(0,3)}`, i.data.data.action.damage.attribute ? "+" : ""].join(""), i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','') ].filter(x => String(x)).join(" "))[5] || "" },
{ "pdf": "WattrdvMT6", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[[`${(i.data.data.action.damage.attribute.toUpperCase()).substring(0,3)}`, i.data.data.action.damage.attribute ? "+" : ""].join(""), i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','') ].filter(x => String(x)).join(" "))[6] || "" },
{ "pdf": "WattrdvMT7", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[[`${(i.data.data.action.damage.attribute.toUpperCase()).substring(0,3)}`, i.data.data.action.damage.attribute ? "+" : ""].join(""), i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','') ].filter(x => String(x)).join(" "))[7] || "" },
{ "pdf": "WattrdvMT8", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[[`${(i.data.data.action.damage.attribute.toUpperCase()).substring(0,3)}`, i.data.data.action.damage.attribute ? "+" : ""].join(""), i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','') ].filter(x => String(x)).join(" "))[8] || "" },
{ "pdf": "WattrdvMT9", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i =>[[`${(i.data.data.action.damage.attribute.toUpperCase()).substring(0,3)}`, i.data.data.action.damage.attribute ? "+" : ""].join(""), i.data.data.action.damage.value, `${(i.data.data.action.damage.type.value.toUpperCase()).substring(0,1)}` + (`(${(i.data.data.action.damage.element.value).substring(0,1)})`).replace('()','') ].filter(x => String(x)).join(" "))[9] || "" },

{ "pdf": "WapMT0", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.damage.ap.value] )[0] || "" },
{ "pdf": "WapMT1", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.damage.ap.value] )[1] || "" },
{ "pdf": "WapMT2", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.damage.ap.value] )[2] || "" },
{ "pdf": "WapMT3", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.damage.ap.value] )[3] || "" },
{ "pdf": "WapMT4", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.damage.ap.value] )[4] || "" },
{ "pdf": "WapMT5", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.damage.ap.value] )[5] || "" },
{ "pdf": "WapMT6", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.damage.ap.value] )[6] || "" },
{ "pdf": "WapMT7", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.damage.ap.value] )[7] || "" },
{ "pdf": "WapMT8", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.damage.ap.value] )[8] || "" },
{ "pdf": "WapMT9", "foundry": @items .filter(i => i.type === "weapon" && i.data.data.category !== "range").map(i => [i.data.data.action.damage.ap.value] )[9] || "" },


/* ARMORS */

{ "pdf": "Armor0", "foundry": @items .filter(i => i.type === "armor").map(i => [i.name] )[0] || "" },
{ "pdf": "Armor1", "foundry": @items .filter(i => i.type === "armor").map(i => [i.name] )[1] || "" },
{ "pdf": "Armor2", "foundry": @items .filter(i => i.type === "armor").map(i => [i.name] )[2] || "" },
{ "pdf": "Armor3", "foundry": @items .filter(i => i.type === "armor").map(i => [i.name] )[3] || "" },
{ "pdf": "Armor4", "foundry": @items .filter(i => i.type === "armor").map(i => [i.name] )[4] || "" },

{ "pdf": "ArmorRule0", "foundry": @items .filter(i => i.type === "armor").map(i => [i.data.data.description.source] )[0] || "" },
{ "pdf": "ArmorRule1", "foundry": @items .filter(i => i.type === "armor").map(i => [i.data.data.description.source] )[1] || "" },
{ "pdf": "ArmorRule2", "foundry": @items .filter(i => i.type === "armor").map(i => [i.data.data.description.source] )[2] || "" },
{ "pdf": "ArmorRule3", "foundry": @items .filter(i => i.type === "armor").map(i => [i.data.data.description.source] )[3] || "" },
{ "pdf": "ArmorRule4", "foundry": @items .filter(i => i.type === "armor").map(i => [i.data.data.description.source] )[4] || "" },

{ "pdf": "ArmorAVmod0", "foundry": @items .filter(i => i.type === "armor").map(i => [i.data.data.armor.mod.toString().replace('true', '+').replace('false', '') , i.data.data.armor.value].filter(x => String(x)).join(""))[ 0] || "" },
{ "pdf": "ArmorAVmod1", "foundry": @items .filter(i => i.type === "armor").map(i => [i.data.data.armor.mod.toString().replace('true', '+').replace('false', '') , i.data.data.armor.value].filter(x => String(x)).join(""))[ 1] || "" },
{ "pdf": "ArmorAVmod2", "foundry": @items .filter(i => i.type === "armor").map(i => [i.data.data.armor.mod.toString().replace('true', '+').replace('false', '') , i.data.data.armor.value].filter(x => String(x)).join(""))[ 2] || "" },
{ "pdf": "ArmorAVmod3", "foundry": @items .filter(i => i.type === "armor").map(i => [i.data.data.armor.mod.toString().replace('true', '+').replace('false', '') , i.data.data.armor.value].filter(x => String(x)).join(""))[ 3] || "" },
{ "pdf": "ArmorAVmod4", "foundry": @items .filter(i => i.type === "armor").map(i => [i.data.data.armor.mod.toString().replace('true', '+').replace('false', '') , i.data.data.armor.value].filter(x => String(x)).join(""))[ 4] || "" },

{ "pdf": "ArmorElem0", "foundry": @items .filter(i => i.type === "armor").map( i => Object.entries(i.data.data.armor).filter(m => m[1] > 0 && m[0] !== "value" && m[0] !== "mod" ).map(t => t[0].toUpperCase().substring(0,1) + "+" + t[1] ).join("  ")   )[0] || "" },
{ "pdf": "ArmorElem1", "foundry": @items .filter(i => i.type === "armor").map( i => Object.entries(i.data.data.armor).filter(m => m[1] > 0 && m[0] !== "value" && m[0] !== "mod" ).map(t => t[0].toUpperCase().substring(0,1) + "+" + t[1] ).join("  ")   )[1] || "" },
{ "pdf": "ArmorElem2", "foundry": @items .filter(i => i.type === "armor").map( i => Object.entries(i.data.data.armor).filter(m => m[1] > 0 && m[0] !== "value" && m[0] !== "mod" ).map(t => t[0].toUpperCase().substring(0,1) + "+" + t[1] ).join("  ")   )[2] || "" },
{ "pdf": "ArmorElem3", "foundry": @items .filter(i => i.type === "armor").map( i => Object.entries(i.data.data.armor).filter(m => m[1] > 0 && m[0] !== "value" && m[0] !== "mod" ).map(t => t[0].toUpperCase().substring(0,1) + "+" + t[1] ).join("  ")   )[3] || "" },
{ "pdf": "ArmorElem4", "foundry": @items .filter(i => i.type === "armor").map( i => Object.entries(i.data.data.armor).filter(m => m[1] > 0 && m[0] !== "value" && m[0] !== "mod" ).map(t => t[0].toUpperCase().substring(0,1) + "+" + t[1] ).join("  ")   )[4] || "" },


/* GEAR */

{ "pdf": "Gear0", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[0] || "" },
{ "pdf": "Gear1", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[1] || "" },
{ "pdf": "Gear2", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[2] || "" },
{ "pdf": "Gear3", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[3] || "" },
{ "pdf": "Gear4", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[4] || "" },
{ "pdf": "Gear5", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[5] || "" },
{ "pdf": "Gear6", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[6] || "" },
{ "pdf": "Gear7", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[7] || "" },
{ "pdf": "Gear8", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[8] || "" },
{ "pdf": "Gear9", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[9] || "" },
{ "pdf": "Gear10", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[10] || "" },
{ "pdf": "Gear11", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[11] || "" },
{ "pdf": "Gear12", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[12] || "" },
{ "pdf": "Gear13", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[13] || "" },
{ "pdf": "Gear14", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[14] || "" },
{ "pdf": "Gear15", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[15] || "" },
{ "pdf": "Gear16", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[16] || "" },
{ "pdf": "Gear17", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[17] || "" },
{ "pdf": "Gear18", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[18] || "" },
{ "pdf": "Gear19", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[19] || "" },
{ "pdf": "Gear20", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[20] || "" },
{ "pdf": "Gear21", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[21] || "" },
{ "pdf": "Gear22", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[22] || "" },
{ "pdf": "Gear23", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[23] || "" },
{ "pdf": "Gear24", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[24] || "" },
{ "pdf": "Gear25", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[25] || "" },
{ "pdf": "Gear26", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[26] || "" },
{ "pdf": "Gear27", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[27] || "" },
{ "pdf": "Gear28", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[28] || "" },
{ "pdf": "Gear29", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[29] || "" },
{ "pdf": "Gear30", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[30] || "" },
{ "pdf": "Gear31", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[31] || "" },
{ "pdf": "Gear32", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[32] || "" },
{ "pdf": "Gear33", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[33] || "" },
{ "pdf": "Gear34", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[34] || "" },
{ "pdf": "Gear35", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[35] || "" },
{ "pdf": "Gear36", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[36] || "" },
{ "pdf": "Gear37", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.name] )[37] || "" },

{ "pdf": "GearRule0", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[0] || "" },
{ "pdf": "GearRule1", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[1] || "" },
{ "pdf": "GearRule2", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[2] || "" },
{ "pdf": "GearRule3", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[3] || "" },
{ "pdf": "GearRule4", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[4] || "" },
{ "pdf": "GearRule5", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[5] || "" },
{ "pdf": "GearRule6", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[6] || "" },
{ "pdf": "GearRule7", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[7] || "" },
{ "pdf": "GearRule8", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[8] || "" },
{ "pdf": "GearRule9", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[9] || "" },
{ "pdf": "GearRule10", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[10] || "" },
{ "pdf": "GearRule11", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[11] || "" },
{ "pdf": "GearRule12", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[12] || "" },
{ "pdf": "GearRule13", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[13] || "" },
{ "pdf": "GearRule14", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[14] || "" },
{ "pdf": "GearRule15", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[15] || "" },
{ "pdf": "GearRule16", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[16] || "" },
{ "pdf": "GearRule17", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[17] || "" },
{ "pdf": "GearRule18", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[18] || "" },
{ "pdf": "GearRule19", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[19] || "" },
{ "pdf": "GearRule20", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[20] || "" },
{ "pdf": "GearRule21", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[21] || "" },
{ "pdf": "GearRule22", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[22] || "" },
{ "pdf": "GearRule23", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[23] || "" },
{ "pdf": "GearRule24", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[24] || "" },
{ "pdf": "GearRule25", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[25] || "" },
{ "pdf": "GearRule26", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[26] || "" },
{ "pdf": "GearRule27", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[27] || "" },
{ "pdf": "GearRule28", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[28] || "" },
{ "pdf": "GearRule29", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[29] || "" },
{ "pdf": "GearRule30", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[30] || "" },
{ "pdf": "GearRule31", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[31] || "" },
{ "pdf": "GearRule32", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[32] || "" },
{ "pdf": "GearRule33", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[33] || "" },
{ "pdf": "GearRule34", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[34] || "" },
{ "pdf": "GearRule35", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[35] || "" },
{ "pdf": "GearRule36", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[36] || "" },
{ "pdf": "GearRule37", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.description.source] )[37] || "" },

{ "pdf": "GearCateg0", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[0] || "" },
{ "pdf": "GearCateg1", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[1] || "" },
{ "pdf": "GearCateg2", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[2] || "" },
{ "pdf": "GearCateg3", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[3] || "" },
{ "pdf": "GearCateg4", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[4] || "" },
{ "pdf": "GearCateg5", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[5] || "" },
{ "pdf": "GearCateg6", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[6] || "" },
{ "pdf": "GearCateg7", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[7] || "" },
{ "pdf": "GearCateg8", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[8] || "" },
{ "pdf": "GearCateg9", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[9] || "" },
{ "pdf": "GearCateg10", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[10] || "" },
{ "pdf": "GearCateg11", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[11] || "" },
{ "pdf": "GearCateg12", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[12] || "" },
{ "pdf": "GearCateg13", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[13] || "" },
{ "pdf": "GearCateg14", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[14] || "" },
{ "pdf": "GearCateg15", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[15] || "" },
{ "pdf": "GearCateg16", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[16] || "" },
{ "pdf": "GearCateg17", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[17] || "" },
{ "pdf": "GearCateg18", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[18] || "" },
{ "pdf": "GearCateg19", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[19] || "" },
{ "pdf": "GearCateg20", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[20] || "" },
{ "pdf": "GearCateg21", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[21] || "" },
{ "pdf": "GearCateg22", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[22] || "" },
{ "pdf": "GearCateg23", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[23] || "" },
{ "pdf": "GearCateg24", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[24] || "" },
{ "pdf": "GearCateg25", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[25] || "" },
{ "pdf": "GearCateg26", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[26] || "" },
{ "pdf": "GearCateg27", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[27] || "" },
{ "pdf": "GearCateg28", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[28] || "" },
{ "pdf": "GearCateg29", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[29] || "" },
{ "pdf": "GearCateg30", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[30] || "" },
{ "pdf": "GearCateg31", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[31] || "" },
{ "pdf": "GearCateg32", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[32] || "" },
{ "pdf": "GearCateg33", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[33] || "" },
{ "pdf": "GearCateg34", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[34] || "" },
{ "pdf": "GearCateg35", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[35] || "" },
{ "pdf": "GearCateg36", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[36] || "" },
{ "pdf": "GearCateg37", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.type] )[37] || "" },

{ "pdf": "GearMisc0", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[0] || "" },
{ "pdf": "GearMisc1", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[1] || "" },
{ "pdf": "GearMisc2", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[2] || "" },
{ "pdf": "GearMisc3", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[3] || "" },
{ "pdf": "GearMisc4", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[4] || "" },
{ "pdf": "GearMisc5", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[5] || "" },
{ "pdf": "GearMisc6", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[6] || "" },
{ "pdf": "GearMisc7", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[7] || "" },
{ "pdf": "GearMisc8", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[8] || "" },
{ "pdf": "GearMisc9", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[9] || "" },
{ "pdf": "GearMisc10", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[10] || "" },
{ "pdf": "GearMisc11", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[11] || "" },
{ "pdf": "GearMisc12", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[12] || "" },
{ "pdf": "GearMisc13", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[13] || "" },
{ "pdf": "GearMisc14", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[14] || "" },
{ "pdf": "GearMisc15", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[15] || "" },
{ "pdf": "GearMisc16", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[16] || "" },
{ "pdf": "GearMisc17", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[17] || "" },
{ "pdf": "GearMisc18", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[18] || "" },
{ "pdf": "GearMisc19", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[19] || "" },
{ "pdf": "GearMisc20", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[20] || "" },
{ "pdf": "GearMisc21", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[21] || "" },
{ "pdf": "GearMisc22", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[22] || "" },
{ "pdf": "GearMisc23", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[23] || "" },
{ "pdf": "GearMisc24", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[24] || "" },
{ "pdf": "GearMisc25", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[25] || "" },
{ "pdf": "GearMisc26", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[26] || "" },
{ "pdf": "GearMisc27", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[27] || "" },
{ "pdf": "GearMisc28", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[28] || "" },
{ "pdf": "GearMisc29", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[29] || "" },
{ "pdf": "GearMisc30", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[30] || "" },
{ "pdf": "GearMisc31", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[31] || "" },
{ "pdf": "GearMisc32", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[32] || "" },
{ "pdf": "GearMisc33", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[33] || "" },
{ "pdf": "GearMisc34", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[34] || "" },
{ "pdf": "GearMisc35", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[35] || "" },
{ "pdf": "GearMisc36", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[36] || "" },
{ "pdf": "GearMisc37", "foundry": @items .filter(i => i.type === "device" || i.type === "equipment" || i.type === "cyberware" || i.type === "bioware" || i.type === "ammo").map(i => [i.data.data.category, "Rtg " + i.data.data.technology.rating,  i.data.data.essence? "Ess " + i.data.data.essence : "" ].filter(x => String(x)).join(" "))[37] || "" },

]


