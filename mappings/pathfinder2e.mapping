[ /*
Pathfinder2e character sheet mapping for Foundry VTT module 'Export Sheet to PDF' - 05/10/2022 - Kurko#1535
Minimum requirements: Foundry VTT Version 9 | PF2e system version: 3.13.6
Fixed for Foundry VTT 11 | PF2e system version: 5.3.2
*/

    /* ---------- PAGE 1 ----------*/

    { "pdf": "CharacterName", "foundry": @name },
    { "pdf": "PlayerName", "foundry": Object.entries(@ownership).filter(entry => entry[1] === 3).map(entry => entry[0]).map(id => !game.users.get(id)?.isGM ? game.users.get(id)?.name : null).filter(x => x).join(", ") },

    { "pdf": "XP", "foundry": @system.details.xp.value + " / " + @system.details.xp.max },
    { "pdf": "Ancestry_Heritage", "foundry": @ancestry.name + ', ' + @heritage.name },
    { "pdf": "Background", "foundry": @background.name },
    { "pdf": "Class", "foundry": @class.name },
    { "pdf": "Size", "foundry": @system.traits.size.value },
    { "pdf": "Alignment", "foundry": @system.details.alignment.value },

    {
        "pdf": "Traits", "foundry":
            @system.traits.traits ? [@system.traits.traits.value.join(", ").replace('humanoid', '').replace(', ', ''), @system.traits.traits.custom].filter(x => String(x)).join(", ") :
                (@system.traits.value ? [@system.traits.value.join(", ").replace('humanoid', '').replace(', ', ''), @system.traits.custom].filter(x => String(x)).join(", ") : '')
    },

    { "pdf": "Deity", "foundry": @deity?.name ?? "" },
    { "pdf": "Level", "foundry": @system.details.level.value },
    { "pdf": "HeroPoints", "foundry": @system.resources.heroPoints.value + '/' + @system.resources.heroPoints.max },

    /* ABILITIES */

    { "pdf": "STRENGTH", "foundry": @system.abilities.str.value ?? "" },
    { "pdf": "STR", "foundry": (@system.abilities.str.mod < 0 ? @system.abilities.str.mod : '+' + @system.abilities.str.mod) || '' },
    { "pdf": "DEXTERITY", "foundry": @system.abilities.dex.value ?? "" },
    { "pdf": "DEX", "foundry": (@system.abilities.dex.mod < 0 ? @system.abilities.dex.mod : '+' + @system.abilities.dex.mod) || '' },
    { "pdf": "CONSTITUTION", "foundry": @system.abilities.con.value ?? "" },
    { "pdf": "CON", "foundry": (@system.abilities.con.mod < 0 ? @system.abilities.con.mod : '+' + @system.abilities.con.mod) || '' },
    { "pdf": "INTELLIGENCE", "foundry": @system.abilities.int.value ?? "" },
    { "pdf": "INT", "foundry": (@system.abilities.int.mod < 0 ? @system.abilities.int.mod : '+' + @system.abilities.int.mod) || '' },
    { "pdf": "WISDOM", "foundry": @system.abilities.wis.value ?? "" },
    { "pdf": "WIS", "foundry": (@system.abilities.wis.mod < 0 ? @system.abilities.wis.mod : '+' + @system.abilities.wis.mod) || '' },
    { "pdf": "CHARISMA", "foundry": @system.abilities.cha.value ?? "" },
    { "pdf": "CHA", "foundry": (@system.abilities.cha.mod < 0 ? @system.abilities.cha.mod : '+' + @system.abilities.cha.mod) || '' },

    /* ATTRIBUTES */

    { "pdf": "AC", "foundry": @system.attributes.ac.value },
    { "pdf": "AC_DexCap", "foundry": ('+' + @system.attributes.ac.dexCap?.value).replace('+Infinity', '') || '' },
    { "pdf": "AC_DexMod", "foundry": @system.attributes.ac.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier) },
    { "pdf": "AC_ProfMod", "foundry": @system.attributes.ac.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier) },
    { "pdf": "AC_T", "foundry": @system.attributes.ac.modifiers.filter(i => i.type === 'proficiency').map(i => i.slug ? i.slug.substring(i.slug.length - 1) === '1' : i.label === 'Trained')[0] || '' },
    { "pdf": "AC_E", "foundry": @system.attributes.ac.modifiers.filter(i => i.type === 'proficiency').map(i => i.slug ? i.slug.substring(i.slug.length - 1) === '2' : i.label === 'Expert')[0] || '' },
    { "pdf": "AC_M", "foundry": @system.attributes.ac.modifiers.filter(i => i.type === 'proficiency').map(i => i.slug ? i.slug.substring(i.slug.length - 1) === '3' : i.label === 'Master')[0] || '' },
    { "pdf": "AC_L", "foundry": @system.attributes.ac.modifiers.filter(i => i.type === 'proficiency').map(i => i.slug ? i.slug.substring(i.slug.length - 1) === '4' : i.label === 'Legendary')[0] || '' },
    {
        "pdf": "AC_ItemMod", "foundry": @system.attributes.ac.modifiers.filter(i => i.type ===
            'item').map(i => '+' + i.modifier || '')
    },

    { "pdf": "Unarmored_T", "foundry": @system.proficiencies.defenses.unarmored.rank === 1 || '' },
    { "pdf": "Unarmored_E", "foundry": @system.proficiencies.defenses.unarmored.rank === 2 || '' },
    { "pdf": "Unarmored_M", "foundry": @system.proficiencies.defenses.unarmored.rank === 3 || '' },
    { "pdf": "Unarmored_L", "foundry": @system.proficiencies.defenses.unarmored.rank === 4 || '' },
    { "pdf": "Light_T", "foundry": @system.proficiencies.defenses.light.rank === 1 || '' },
    { "pdf": "Light_E", "foundry": @system.proficiencies.defenses.light.rank === 2 || '' },
    { "pdf": "Light_M", "foundry": @system.proficiencies.defenses.light.rank === 3 || '' },
    { "pdf": "Light_L", "foundry": @system.proficiencies.defenses.light.rank === 4 || '' },
    { "pdf": "Medium_T", "foundry": @system.proficiencies.defenses.medium.rank === 1 || '' },
    { "pdf": "Medium_E", "foundry": @system.proficiencies.defenses.medium.rank === 2 || '' },
    { "pdf": "Medium_M", "foundry": @system.proficiencies.defenses.medium.rank === 3 || '' },
    { "pdf": "Medium_L", "foundry": @system.proficiencies.defenses.medium.rank === 4 || '' },
    { "pdf": "Heavy_T", "foundry": @system.proficiencies.defenses.heavy.rank === 1 || '' },
    { "pdf": "Heavy_E", "foundry": @system.proficiencies.defenses.heavy.rank === 2 || '' },
    { "pdf": "Heavy_M", "foundry": @system.proficiencies.defenses.heavy.rank === 3 || '' },
    { "pdf": "Heavy_L", "foundry": @system.proficiencies.defenses.heavy.rank === 4 || '' },

    { "pdf": "MaxHP", "foundry": @system.attributes.hp.max },
    { "pdf": "CurrentHP", "foundry": @system.attributes.hp.value },
    { "pdf": "TempHP", "foundry": @system.attributes.hp.temp },

    { "pdf": "Dying", "foundry": @system.attributes.dying.value + '/' + @system.attributes.dying.max },
    { "pdf": "Wounded", "foundry": @system.attributes.wounded.value + '/' + @system.attributes.wounded.max },

    /* SHIELD */

    { "pdf": "AC_ShieldMod", "foundry": @items.filter(i => i.system.category === 'shield' && i.isEquipped).map(i => i.system.acBonus)[0] || '' },
    { "pdf": "ShieldHardness", "foundry": @items.filter(i => i.system.category === 'shield' && i.isEquipped).map(i => i.system.hardness)[0] || '-' },
    { "pdf": "ShieldMaxHP", "foundry": @items.filter(i => i.system.category === 'shield' && i.isEquipped).map(i => i.system.hp.max)[0] || '-' },
    { "pdf": "ShieldBT", "foundry": @items.filter(i => i.system.category === 'shield' && i.isEquipped).map(i => i.system.hp.brokenThreshold)[0] || '-' },
    { "pdf": "ShieldCurHP", "foundry": @items.filter(i => i.system.category === 'shield' && i.isEquipped).map(i => i.system.hp.value)[0] || '-' },

    /* RESISTANCES - IMMUNITIES - CONDITIONS - WEAKNESSES*/

    { "pdf": "Resistances_Immunities", "foundry": ['R: ' + @system.attributes.resistances.map(i => ' ' + i.type + ' ' + i.value), '\nI: ' + @system.attributes.immunities.map(i => i.type)].filter(x => String(x)).join(", ").trim() },
    /*
    { "pdf": "Conditions", "foundry": actor.items._source.filter(i => i.type === 'condition').map(i =>i.name).join(", ") },
    */
    { "pdf": "Conditions", "foundry": @conditions.map(i => i.name).join(", ") },
    { "pdf": "Weaknesses", "foundry": 'W: ' + @system.attributes.weaknesses.map(i => ' ' + i.type + ' ' + i.value).join(", ") + '\n' + actor.items._source.filter(i => i.type === 'effect').map(i => i.name).join(", ") },

    /* SAVES */

    { "pdf": "FortSave", "foundry": '+' + @system.saves.fortitude.value },
    { "pdf": "FortSave_ConMod", "foundry": (@system.abilities.con.mod < 0 ? @system.abilities.con.mod : '+' + @system.abilities.con.mod) || '' },
    { "pdf": "FortSave_ProfMod", "foundry": @system.saves.fortitude.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier) },
    { "pdf": "FortSave_ItemMod", "foundry": (@system.saves.fortitude.modifiers.filter(i => i.type !== 'ability' && i.type !== 'proficiency' && i.enabled).map(i => (i.modifier <= 0 ? '' : '+') + i.modifier) || '') + (((@system.saves.fortitude.modifiers.filter(i => i.type !== 'ability' && i.type !== 'proficiency' && !i.enabled).map(i => i.modifier).reduce((a, b) => a + b, 0) || '') <= 0 ? '(' : '(+') + (@system.saves.fortitude.modifiers.filter(i => i.type !== 'ability' && i.type !== 'proficiency' && !i.enabled).map(i => i.modifier).reduce((a, b) => a + b, 0) || '') + ')').replace('()', '') },
    { "pdf": "FortSave_T", "foundry": @system.saves.fortitude.rank === 1 || '' },
    { "pdf": "FortSave_E", "foundry": @system.saves.fortitude.rank === 2 || '' },
    { "pdf": "FortSave_M", "foundry": @system.saves.fortitude.rank === 3 || '' },
    { "pdf": "FortSave_L", "foundry": @system.saves.fortitude.rank === 4 || '' },

    { "pdf": "RefSave", "foundry": '+' + @system.saves.reflex.value },
    { "pdf": "RefSave_DexMod", "foundry": (@system.abilities.dex.mod < 0 ? @system.abilities.dex.mod : '+' + @system.abilities.dex.mod) || '' },
    { "pdf": "RefSave_ProfMod", "foundry": @system.saves.reflex.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier) },
    { "pdf": "RefSave_ItemMod", "foundry": (@system.saves.reflex.modifiers.filter(i => i.type !== 'ability' && i.type !== 'proficiency' && i.enabled).map(i => (i.modifier <= 0 ? '' : '+') + i.modifier) || '') + (((@system.saves.reflex.modifiers.filter(i => i.type !== 'ability' && i.type !== 'proficiency' && !i.enabled).map(i => i.modifier).reduce((a, b) => a + b, 0) || '') <= 0 ? '(' : '(+') + (@system.saves.reflex.modifiers.filter(i => i.type !== 'ability' && i.type !== 'proficiency' && !i.enabled).map(i => i.modifier).reduce((a, b) => a + b, 0) || '') + ')').replace('()', '') },
    { "pdf": "RefSave_T", "foundry": @system.saves.reflex.rank === 1 || '' },
    { "pdf": "RefSave_E", "foundry": @system.saves.reflex.rank === 2 || '' },
    { "pdf": "RefSave_M", "foundry": @system.saves.reflex.rank === 3 || '' },
    { "pdf": "RefSave_L", "foundry": @system.saves.reflex.rank === 4 || '' },

    { "pdf": "WillSave", "foundry": '+' + @system.saves.will.value },
    { "pdf": "WillSave_WisMod", "foundry": (@system.abilities.wis.mod < 0 ? @system.abilities.wis.mod : '+' + @system.abilities.wis.mod) || '' },
    { "pdf": "WillSave_ProfMod", "foundry": @system.saves.will.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier) },
    { "pdf": "WillSave_ItemMod", "foundry": (@system.saves.will.modifiers.filter(i => i.type !== 'ability' && i.type !== 'proficiency' && i.enabled).map(i => (i.modifier <= 0 ? '' : '+') + i.modifier) || '') + (((@system.saves.will.modifiers.filter(i => i.type !== 'ability' && i.type !== 'proficiency' && !i.enabled).map(i => i.modifier).reduce((a, b) => a + b, 0) || '') <= 0 ? '(' : '(+') + (@system.saves.will.modifiers.filter(i => i.type !== 'ability' && i.type !== 'proficiency' && !i.enabled).map(i => i.modifier).reduce((a, b) => a + b, 0) || '') + ')').replace('()', '') },
    { "pdf": "WillSave_T", "foundry": @system.saves.will.rank === 1 || '' },
    { "pdf": "WillSave_E", "foundry": @system.saves.will.rank === 2 || '' },
    { "pdf": "WillSave_M", "foundry": @system.saves.will.rank === 3 || '' },
    { "pdf": "WillSave_L", "foundry": @system.saves.will.rank === 4 || '' },

    {
        "pdf": "SavesNotes", "foundry":
            ' FOR: ' + @system.saves.fortitude.modifiers.filter(i => i.type === 'item' || i.type === 'untyped').map(i => ' ' + (i.slug ? i.slug : i.label) + ' ' + (i.modifier < 0 ? '' : '+') + i.modifier) + ' \n' +
            ' REF: ' + @system.saves.reflex.modifiers.filter(i => i.type === 'item' || i.type === 'untyped').map(i => ' ' + (i.slug ? i.slug : i.label) + ' ' + (i.modifier < 0 ? '' : '+') + i.modifier) + ' \n' +
            ' WILL: ' + @system.saves.will.modifiers.filter(i => i.type === 'item' || i.type === 'untyped').map(i => ' ' + (i.slug ? i.slug : i.label) + ' ' + (i.modifier < 0 ? '' : '+') + i.modifier)
    },

    /* PERCEPTION  */

    { "pdf": "Perception", "foundry": '+' + @system.attributes.perception.value },
    { "pdf": "Percept_WisMod", "foundry": @system.attributes.perception.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier) },
    { "pdf": "Percept_ProfMod", "foundry": @system.attributes.perception.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier) },
    { "pdf": "Percept_ItemMod", "foundry": @system.attributes.perception.modifiers.filter(i => i.type !== 'ability' && i.type !== 'proficiency' && i.enabled).map(i => (i.modifier < 0 ? '' : '+') + i.modifier) + @system.attributes.perception.modifiers.filter(i => i.type !== 'ability' && i.type !== 'proficiency' && !i.enabled).map(i => (i.modifier < 0 ? '(' : '(+') + i.modifier + ')') },

    { "pdf": "Percept_T", "foundry": @system.attributes.perception.rank === 1 || '' },
    { "pdf": "Percept_E", "foundry": @system.attributes.perception.rank === 2 || '' },
    { "pdf": "Percept_M", "foundry": @system.attributes.perception.rank === 3 || '' },
    { "pdf": "Percept_L", "foundry": @system.attributes.perception.rank === 4 || '' },

    { "pdf": "Senses", "foundry": @system.traits.senses.filter(i => i.type).map(i => i.label).join(", ") + ' \n' + @system.attributes.perception.modifiers.filter(i => i.type === 'item' || i.type === 'untyped').map(i => ' ' + (i.slug ? i.slug : i.label) + ' ' + (i.modifier < 0 ? '' : '+') + i.modifier) },

    /* CLASS DC */

    { "pdf": "ClassDC", "foundry": @system.attributes.classDC?.value },
    { "pdf": "ClassDC_KeyMod", "foundry": @system.attributes.classDC?.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier) },
    { "pdf": "ClassDC_ProfMod", "foundry": @system.attributes.classDC?.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier) },
    { "pdf": "ClassDC_ItemMod", "foundry": @system.attributes.classDC?.modifiers.filter(i => i.type !== 'ability' && i.type !== 'proficiency' && i.enabled).map(i => (i.modifier < 0 ? '' : '+') + i.modifier) + @system.attributes.perception.modifiers.filter(i => i.type !== 'ability' && i.type !== 'proficiency' && !i.enabled).map(i => (i.modifier < 0 ? '(' : '(+') + i.modifier + ')') },
    { "pdf": "ClassDC_T", "foundry": @system.attributes.classDC?.rank === 1 || '' },
    { "pdf": "ClassDC_E", "foundry": @system.attributes.classDC?.rank === 2 || '' },
    { "pdf": "ClassDC_M", "foundry": @system.attributes.classDC?.rank === 3 || '' },
    { "pdf": "ClassDC_L", "foundry": @system.attributes.classDC?.rank === 4 || '' },

    /* SPEED */

    { "pdf": "Speed", "foundry": @system.attributes.speed.value + (@system.attributes.speed.totalModifier ? ' (+' + @system.attributes.speed.totalModifier + ')' : '') },
    {
        "pdf": "SpeedNotes", "foundry":
            @system.attributes.speed.otherSpeeds.map(i => ' ' + i.label + ' ' + i.value).join(", ") + ' \n' +
            @system.attributes.speed.modifiers.map(i => ' ' + (i.slug ? i.slug : i.label) + ' ' + (i.modifier < 0 ? '' : '+') + i.modifier)
    },

    /* MELEE STRIKES */
    /* MELEE 1 */

    { "pdf": "Melee1_Name", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.slug)[0] || "" },
    { "pdf": "Melee1_AtkMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => (i.totalModifier < 0 ? '' : '+') + i.totalModifier)[0] || "" },
    { "pdf": "Melee1_AtkStrMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[0]?.filter(a => a.type === 'ability' && a.enabled).map(a => a.modifier < 0 ? a.modifier : '+' + a.modifier)[0] || "" },
    { "pdf": "Melee1_AtkProfMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[0]?.filter(a => a.type === 'proficiency').map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Melee1_T", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[0]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Melee1_E", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[0]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Melee1_M", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[0]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Melee1_L", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[0]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Melee1_AtkItemMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[0]?.filter(a => a.type === 'item' && a.enabled).map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Melee1_Dice", "foundry": @system.actions.filter(a => (a.description === 'PF2E.Strike.Melee.Description' || a.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.damage.dice + i.item.system.damage.die)[0] || '' },

    { "pdf": "Melee1_DmgStrMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[0]?.filter(a => a.ability === 'str').map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Melee1_DmgB", "foundry": @system.actions.filter(a => (a.description === 'PF2E.Strike.Melee.Description' || a.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.damage.damageType === 'bludgeoning')[0] || '' },
    { "pdf": "Melee1_DmgP", "foundry": @system.actions.filter(a => (a.description === 'PF2E.Strike.Melee.Description' || a.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.damage.damageType === 'piercing')[0] || '' },
    { "pdf": "Melee1_DmgS", "foundry": @system.actions.filter(a => (a.description === 'PF2E.Strike.Melee.Description' || a.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.damage.damageType === 'slashing' || i.item.system.traits.value.includes('versatile-s'))[0] || '' },

    { "pdf": "Melee1_Traits", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.traits)[0]?.value.map(a => a).join(", ") || "" },
    {
        "pdf": "Melee1_Other", "foundry": [@system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.traits)[0]?.rarity || "",
        @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.usage?.value)[0] || ""].join(", ")
            || ""
    },

    /* MELEE 2 */

    { "pdf": "Melee2_Name", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.slug)[1] || "" },
    { "pdf": "Melee2_AtkMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => (i.totalModifier < 0 ? '' : '+') + i.totalModifier)[1] || "" },
    { "pdf": "Melee2_AtkStrMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[1]?.filter(a => a.type === 'ability' && a.enabled).map(a => a.modifier < 0 ? a.modifier : '+' + a.modifier)[0] || "" },
    { "pdf": "Melee2_AtkProfMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[1]?.filter(a => a.type === 'proficiency').map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Melee2_T", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[1]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Melee2_E", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[1]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Melee2_M", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[1]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Melee2_L", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[1]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Melee2_AtkItemMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[1]?.filter(a => a.type === 'item' && a.enabled).map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Melee2_Dice", "foundry": @system.actions.filter(a => (a.description === 'PF2E.Strike.Melee.Description' || a.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.damage.dice + i.item.system.damage.die)[1] || '' },

    { "pdf": "Melee2_DmgStrMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[1]?.filter(a => a.ability === 'str').map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Melee2_DmgB", "foundry": @system.actions.filter(a => (a.description === 'PF2E.Strike.Melee.Description' || a.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.damage.damageType === 'bludgeoning')[1] || '' },
    { "pdf": "Melee2_DmgP", "foundry": @system.actions.filter(a => (a.description === 'PF2E.Strike.Melee.Description' || a.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.damage.damageType === 'piercing')[1] || '' },
    { "pdf": "Melee2_DmgS", "foundry": @system.actions.filter(a => (a.description === 'PF2E.Strike.Melee.Description' || a.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.damage.damageType === 'slashing' || i.item.system.traits.value.includes('versatile-s'))[1] || '' },

    { "pdf": "Melee2_Traits", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.traits)[1]?.value.map(a => a).join(", ") || "" },
    {
        "pdf": "Melee2_Other", "foundry": [@system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.traits)[1]?.rarity || "",
        @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.usage?.value)[1] || ""].join(", ")
            || ""
    },

    /* MELEE 3 */

    { "pdf": "Melee3_Name", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.slug)[2] || "" },
    { "pdf": "Melee3_AtkMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => (i.totalModifier < 0 ? '' : '+') + i.totalModifier)[2] || "" },
    { "pdf": "Melee3_AtkStrMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[2]?.filter(a => a.type === 'ability' && a.enabled).map(a => a.modifier < 0 ? a.modifier : '+' + a.modifier)[0] || "" },
    { "pdf": "Melee3_AtkProfMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[2]?.filter(a => a.type === 'proficiency').map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Melee3_T", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[2]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Melee3_E", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[2]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Melee3_M", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[2]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Melee3_L", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[2]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Melee3_AtkItemMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[2]?.filter(a => a.type === 'item' && a.enabled).map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Melee3_Dice", "foundry": @system.actions.filter(a => (a.description === 'PF2E.Strike.Melee.Description' || a.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.damage.dice + i.item.system.damage.die)[2] || '' },

    { "pdf": "Melee3_DmgStrMod", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.modifiers)[2]?.filter(a => a.ability === 'str').map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Melee3_DmgB", "foundry": @system.actions.filter(a => (a.description === 'PF2E.Strike.Melee.Description' || a.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.damage.damageType === 'bludgeoning')[2] || '' },
    { "pdf": "Melee3_DmgP", "foundry": @system.actions.filter(a => (a.description === 'PF2E.Strike.Melee.Description' || a.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.damage.damageType === 'piercing')[2] || '' },
    { "pdf": "Melee3_DmgS", "foundry": @system.actions.filter(a => (a.description === 'PF2E.Strike.Melee.Description' || a.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.damage.damageType === 'slashing' || i.item.system.traits.value.includes('versatile-s'))[2] || '' },

    { "pdf": "Melee3_Traits", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.traits)[2]?.value.map(a => a).join(", ") || "" },
    {
        "pdf": "Melee3_Other", "foundry": [@system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.traits)[2]?.rarity || "",
        @system.actions.filter(i => (i.description === 'PF2E.Strike.Melee.Description' || i.description === 'PF2E.Strike.Unarmed.Description')).map(i => i.item.system.usage?.value)[2] || ""].join(", ")
            || ""
    },



    /* RANGED STRIKES */
    /* RANGED 1 */

    { "pdf": "Ranged1_Name", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.slug)[0] || "" },
    { "pdf": "Ranged1_AtkMod", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => (i.totalModifier < 0 ? '' : '+') + i.totalModifier)[0] || "" },
    { "pdf": "Ranged1_AtkDexMod", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[0]?.filter(a => a.type === 'ability' && a.enabled).map(a => a.modifier < 0 ? a.modifier : '+' + a.modifier)[0] || "" },
    { "pdf": "Ranged1_AtkProfMod", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[0]?.filter(a => a.type === 'proficiency').map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Ranged1_T", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[0]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Ranged1_E", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[0]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Ranged1_M", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[0]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Ranged1_L", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[0]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Ranged1_AtkItemMod", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[0]?.filter(a => a.type === 'item' && a.enabled).map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Ranged1_Dice", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.item.system.damage.dice + i.item.system.damage.die)[0] || '' },

    { "pdf": "Ranged1_DmgB", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.item.system.damage.damageType === 'bludgeoning')[0] || '' },
    { "pdf": "Ranged1_DmgP", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.item.system.damage.damageType === 'piercing')[0] || '' },
    { "pdf": "Ranged1_DmgS", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.item.system.damage.damageType === 'slashing' || i.item.system.traits.value.includes('versatile-s'))[0] || '' },

    { "pdf": "Ranged1_Traits", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Ranged.Description')).map(i => i.item.system.traits)[0]?.value.map(a => a).join(", ") || "" },
    {
        "pdf": "Ranged1_Other", "foundry": [@system.actions.filter(i => (i.description === 'PF2E.Strike.Ranged.Description')).map(i => i.item.system.traits)[0]?.rarity || "",
        @system.actions.filter(i => (i.description === 'PF2E.Strike.Ranged.Description')).map(i => i.item.system.usage?.value)[0] || ""].join(", ")
            || ""
    },

    /* RANGED 2 */

    { "pdf": "Ranged2_Name", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.slug)[1] || "" },
    { "pdf": "Ranged2_AtkMod", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => (i.totalModifier < 0 ? '' : '+') + i.totalModifier)[1] || "" },
    { "pdf": "Ranged2_AtkDexMod", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[1]?.filter(a => a.type === 'ability' && a.enabled).map(a => a.modifier < 0 ? a.modifier : '+' + a.modifier)[0] || "" },
    { "pdf": "Ranged2_AtkProfMod", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[1]?.filter(a => a.type === 'proficiency').map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Ranged2_T", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[1]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Ranged2_E", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[1]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Ranged2_M", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[1]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Ranged2_L", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[1]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Ranged2_AtkItemMod", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[1]?.filter(a => a.type === 'item' && a.enabled).map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Ranged2_Dice", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.item.system.damage.dice + i.item.system.damage.die)[1] || '' },

    { "pdf": "Ranged2_DmgB", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.item.system.damage.damageType === 'bludgeoning')[1] || '' },
    { "pdf": "Ranged2_DmgP", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.item.system.damage.damageType === 'piercing')[1] || '' },
    { "pdf": "Ranged2_DmgS", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.item.system.damage.damageType === 'slashing' || i.item.system.traits.value.includes('versatile-s'))[1] || '' },

    { "pdf": "Ranged2_Traits", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Ranged.Description')).map(i => i.item.system.traits)[1]?.value.map(a => a).join(", ") || "" },
    {
        "pdf": "Ranged2_Other", "foundry": [@system.actions.filter(i => (i.description === 'PF2E.Strike.Ranged.Description')).map(i => i.item.system.traits)[1]?.rarity || "",
        @system.actions.filter(i => (i.description === 'PF2E.Strike.Ranged.Description')).map(i => i.item.system.usage?.value)[1] || ""].join(", ")
            || ""
    },

    /* RANGED 3 */

    { "pdf": "Ranged3_Name", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.slug)[2] || "" },
    { "pdf": "Ranged3_AtkMod", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => (i.totalModifier < 0 ? '' : '+') + i.totalModifier)[2] || "" },
    { "pdf": "Ranged3_AtkDexMod", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[2]?.filter(a => a.type === 'ability' && a.enabled).map(a => a.modifier < 0 ? a.modifier : '+' + a.modifier)[0] || "" },
    { "pdf": "Ranged3_AtkProfMod", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[2]?.filter(a => a.type === 'proficiency').map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Ranged3_T", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[2]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Ranged3_E", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[2]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Ranged3_M", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[2]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Ranged3_L", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[2]?.filter(a => a.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Ranged3_AtkItemMod", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.modifiers)[2]?.filter(a => a.type === 'item' && a.enabled).map(a => '+' + a.modifier)[0] || "" },

    { "pdf": "Ranged3_Dice", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.item.system.damage.dice + i.item.system.damage.die)[2] || '' },

    { "pdf": "Ranged3_DmgB", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.item.system.damage.damageType === 'bludgeoning')[2] || '' },
    { "pdf": "Ranged3_DmgP", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.item.system.damage.damageType === 'piercing')[2] || '' },
    { "pdf": "Ranged3_DmgS", "foundry": @system.actions.filter(i => i.description === 'PF2E.Strike.Ranged.Description').map(i => i.item.system.damage.damageType === 'slashing' || i.item.system.traits.value.includes('versatile-s'))[2] || '' },

    { "pdf": "Ranged3_Traits", "foundry": @system.actions.filter(i => (i.description === 'PF2E.Strike.Ranged.Description')).map(i => i.item.system.traits)[2]?.value.map(a => a).join(", ") || "" },
    {
        "pdf": "Ranged3_Other", "foundry": [@system.actions.filter(i => (i.description === 'PF2E.Strike.Ranged.Description')).map(i => i.item.system.traits)[2]?.rarity || "",
        @system.actions.filter(i => (i.description === 'PF2E.Strike.Ranged.Description')).map(i => i.item.system.usage?.value)[2] || ""].join(", ")
            || ""
    },

    /* WEAPON PROFICIENCIES */

    { "pdf": "Simple_T", "foundry": @system.proficiencies.attacks.simple.rank === 1 || '' },
    { "pdf": "Simple_E", "foundry": @system.proficiencies.attacks.simple.rank === 2 || '' },
    { "pdf": "Simple_M", "foundry": @system.proficiencies.attacks.simple.rank === 3 || '' },
    { "pdf": "Simple_L", "foundry": @system.proficiencies.attacks.simple.rank === 4 || '' },

    { "pdf": "Martial_T", "foundry": @system.proficiencies.attacks.martial.rank === 1 || '' },
    { "pdf": "Martial_E", "foundry": @system.proficiencies.attacks.martial.rank === 2 || '' },
    { "pdf": "Martial_M", "foundry": @system.proficiencies.attacks.martial.rank === 3 || '' },
    { "pdf": "Martial_L", "foundry": @system.proficiencies.attacks.martial.rank === 4 || '' },

    { "pdf": "WeapProfOther1_T", "foundry": @system.proficiencies.attacks.unarmed.rank === 1 || '' },
    { "pdf": "WeapProfOther1_E", "foundry": @system.proficiencies.attacks.unarmed.rank === 2 || '' },
    { "pdf": "WeapProfOther1_M", "foundry": @system.proficiencies.attacks.unarmed.rank === 3 || '' },
    { "pdf": "WeapProfOther1_L", "foundry": @system.proficiencies.attacks.unarmed.rank === 4 || '' },

    { "pdf": "OtherWeaponType1", "foundry": ' Unarmed' },

    /* LANGUAGES */

    { "pdf": "Languages", "foundry": [@system.traits.languages.value.join(", "), @system.traits.languages.custom].filter(x => String(x)).join(", ") },

    /* SKILLS */

    { "pdf": "Acrobatics", "foundry": @system.skills.acr.value < 0 ? @system.skills.acr.value : '+' + @system.skills.acr.value || '' },
    { "pdf": "Acro_Mod", "foundry": @system.skills.acr.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Acro_ProfMod", "foundry": @system.skills.acr.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Acro_T", "foundry": @system.skills.acr.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Acro_E", "foundry": @system.skills.acr.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Acro_M", "foundry": @system.skills.acr.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Acro_L", "foundry": @system.skills.acr.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Acro_ItemMod", "foundry": @system.skills.acr.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },
    { "pdf": "Acro_ArmorMod", "foundry": @system.skills.acr.modifiers.filter(i => i.label === 'Armor Check Penalty' && i.enabled).map(i => i.modifier)[0] || "" },

    { "pdf": "Arcana", "foundry": @system.skills.arc.value < 0 ? @system.skills.arc.value : '+' + @system.skills.arc.value || '' },
    { "pdf": "Arcana_Mod", "foundry": @system.skills.arc.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Arcana_ProfMod", "foundry": @system.skills.arc.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Arcana_T", "foundry": @system.skills.arc.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Arcana_E", "foundry": @system.skills.arc.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Arcana_M", "foundry": @system.skills.arc.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Arcana_L", "foundry": @system.skills.arc.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Arcana_ItemMod", "foundry": @system.skills.arc.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },

    { "pdf": "Athletics", "foundry": @system.skills.ath.value < 0 ? @system.skills.ath.value : '+' + @system.skills.ath.value || '' },
    { "pdf": "Ath_Mod", "foundry": @system.skills.ath.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Ath_ProfMod", "foundry": @system.skills.ath.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Ath_T", "foundry": @system.skills.ath.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Ath_E", "foundry": @system.skills.ath.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Ath_M", "foundry": @system.skills.ath.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Ath_L", "foundry": @system.skills.ath.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Ath_ItemMod", "foundry": @system.skills.ath.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },
    { "pdf": "Ath_ArmorMod", "foundry": @system.skills.ath.modifiers.filter(i => i.label === 'Armor Check Penalty' && i.enabled).map(i => i.modifier)[0] || "" },

    { "pdf": "Crafting", "foundry": @system.skills.cra.value < 0 ? @system.skills.cra.value : '+' + @system.skills.cra.value || '' },
    { "pdf": "Craft_Mod", "foundry": @system.skills.cra.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Craft_ProfMod", "foundry": @system.skills.cra.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Craft_T", "foundry": @system.skills.cra.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Craft_E", "foundry": @system.skills.cra.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Craft_M", "foundry": @system.skills.cra.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Craft_L", "foundry": @system.skills.cra.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Craft_ItemMod", "foundry": @system.skills.cra.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },

    { "pdf": "Deception", "foundry": @system.skills.dec.value < 0 ? @system.skills.dec.value : '+' + @system.skills.dec.value || '' },
    { "pdf": "Decept_Mod", "foundry": @system.skills.dec.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Decept_ProfMod", "foundry": @system.skills.dec.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Decept_T", "foundry": @system.skills.dec.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Decept_E", "foundry": @system.skills.dec.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Decept_M", "foundry": @system.skills.dec.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Decept_L", "foundry": @system.skills.dec.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Decept_ItemMod", "foundry": @system.skills.dec.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },

    { "pdf": "Diplomacy", "foundry": @system.skills.dip.value < 0 ? @system.skills.dip.value : '+' + @system.skills.dip.value || '' },
    { "pdf": "Diplo_Mod", "foundry": @system.skills.dip.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Diplo_ProfMod", "foundry": @system.skills.dip.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Diplo_T", "foundry": @system.skills.dip.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Diplo_E", "foundry": @system.skills.dip.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Diplo_M", "foundry": @system.skills.dip.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Diplo_L", "foundry": @system.skills.dip.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Diplo_ItemMod", "foundry": @system.skills.dip.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },

    { "pdf": "Intimidation", "foundry": @system.skills.itm.value < 0 ? @system.skills.itm.value : '+' + @system.skills.itm.value || '' },
    { "pdf": "Intim_Mod", "foundry": @system.skills.itm.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Intim_ProfMod", "foundry": @system.skills.itm.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Intim_T", "foundry": @system.skills.itm.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Intim_E", "foundry": @system.skills.itm.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Intim_M", "foundry": @system.skills.itm.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Intim_L", "foundry": @system.skills.itm.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Intim_ItemMod", "foundry": @system.skills.itm.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },

    { "pdf": "Medicine", "foundry": @system.skills.med.value < 0 ? @system.skills.med.value : '+' + @system.skills.med.value || '' },
    { "pdf": "Med_Mod", "foundry": @system.skills.med.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Med_ProfMod", "foundry": @system.skills.med.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Med_T", "foundry": @system.skills.med.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Med_E", "foundry": @system.skills.med.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Med_M", "foundry": @system.skills.med.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Med_L", "foundry": @system.skills.med.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Med_ItemMod", "foundry": @system.skills.med.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },

    { "pdf": "Nature", "foundry": @system.skills.nat.value < 0 ? @system.skills.nat.value : '+' + @system.skills.nat.value || '' },
    { "pdf": "Nature_Mod", "foundry": @system.skills.nat.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Nature_ProfMod", "foundry": @system.skills.nat.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Nature_T", "foundry": @system.skills.nat.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Nature_E", "foundry": @system.skills.nat.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Nature_M", "foundry": @system.skills.nat.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Nature_L", "foundry": @system.skills.nat.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Nature_ItemMod", "foundry": @system.skills.nat.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },

    { "pdf": "Occultism", "foundry": @system.skills.occ.value < 0 ? @system.skills.occ.value : '+' + @system.skills.occ.value || '' },
    { "pdf": "Occult_Mod", "foundry": @system.skills.occ.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Occult_ProfMod", "foundry": @system.skills.occ.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Occult_T", "foundry": @system.skills.occ.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Occult_E", "foundry": @system.skills.occ.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Occult_M", "foundry": @system.skills.occ.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Occult_L", "foundry": @system.skills.occ.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Occult_ItemMod", "foundry": @system.skills.occ.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },

    { "pdf": "Performance", "foundry": @system.skills.prf.value < 0 ? @system.skills.prf.value : '+' + @system.skills.prf.value || '' },
    { "pdf": "Perf_Mod", "foundry": @system.skills.prf.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Perf_ProfMod", "foundry": @system.skills.prf.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Perf_T", "foundry": @system.skills.prf.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Perf_E", "foundry": @system.skills.prf.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Perf_M", "foundry": @system.skills.prf.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Perf_L", "foundry": @system.skills.prf.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Perf_ItemMod", "foundry": @system.skills.prf.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },

    { "pdf": "Religion", "foundry": @system.skills.rel.value < 0 ? @system.skills.rel.value : '+' + @system.skills.rel.value || '' },
    { "pdf": "Religion_Mod", "foundry": @system.skills.rel.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Religion_ProfMod", "foundry": @system.skills.rel.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Religion_T", "foundry": @system.skills.rel.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Religion_E", "foundry": @system.skills.rel.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Religion_M", "foundry": @system.skills.rel.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Religion_L", "foundry": @system.skills.rel.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Religion_ItemMod", "foundry": @system.skills.rel.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },

    { "pdf": "Society", "foundry": @system.skills.soc.value < 0 ? @system.skills.soc.value : '+' + @system.skills.soc.value || '' },
    { "pdf": "Society_Mod", "foundry": @system.skills.soc.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Society_ProfMod", "foundry": @system.skills.soc.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Society_T", "foundry": @system.skills.soc.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Society_E", "foundry": @system.skills.soc.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Society_M", "foundry": @system.skills.soc.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Society_L", "foundry": @system.skills.soc.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Society_ItemMod", "foundry": @system.skills.soc.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },

    { "pdf": "Stealth", "foundry": @system.skills.ste.value < 0 ? @system.skills.ste.value : '+' + @system.skills.ste.value || '' },
    { "pdf": "Stealth_Mod", "foundry": @system.skills.ste.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Stealth_ProfMod", "foundry": @system.skills.ste.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Stealth_T", "foundry": @system.skills.ste.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Stealth_E", "foundry": @system.skills.ste.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Stealth_M", "foundry": @system.skills.ste.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Stealth_L", "foundry": @system.skills.ste.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Stealth_ItemMod", "foundry": @system.skills.ste.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },
    { "pdf": "Stealth_ArmorMod", "foundry": @system.skills.ste.modifiers.filter(i => i.label === 'Armor Check Penalty' && i.enabled).map(i => i.modifier)[0] || "" },

    { "pdf": "Survival", "foundry": @system.skills.sur.value < 0 ? @system.skills.sur.value : '+' + @system.skills.sur.value || '' },
    { "pdf": "Survival_Mod", "foundry": @system.skills.sur.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Survival_ProfMod", "foundry": @system.skills.sur.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Survival_T", "foundry": @system.skills.sur.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Survival_E", "foundry": @system.skills.sur.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Survival_M", "foundry": @system.skills.sur.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Survival_L", "foundry": @system.skills.sur.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Survival_ItemMod", "foundry": @system.skills.sur.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },

    { "pdf": "Thievery", "foundry": @system.skills.thi.value < 0 ? @system.skills.thi.value : '+' + @system.skills.thi.value || '' },
    { "pdf": "Thievery_Mod", "foundry": @system.skills.thi.modifiers.filter(i => i.type === 'ability').map(i => i.modifier < 0 ? i.modifier : '+' + i.modifier)[0] || "" },
    { "pdf": "Thievery_ProfMod", "foundry": @system.skills.thi.modifiers.filter(i => i.type === 'proficiency').map(i => '+' + i.modifier)[0] || "" },
    { "pdf": "Thievery_T", "foundry": @system.skills.thi.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Thievery_E", "foundry": @system.skills.thi.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Thievery_M", "foundry": @system.skills.thi.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Thievery_L", "foundry": @system.skills.thi.modifiers.filter(i => i.type === 'proficiency').map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Thievery_ItemMod", "foundry": @system.skills.thi.modifiers.filter(i => i.type === 'item' && i.enabled).map(i => ([i.modifier].reduce((partialSum, a) => partialSum + a, 0) < 0 ? [i.modifier].reduce((partialSum, a) => partialSum + a, 0) : '+' + [i.modifier].reduce((partialSum, a) => partialSum + a, 0)) || '') },
    { "pdf": "Thievery_ArmorMod", "foundry": @system.skills.thi.modifiers.filter(i => i.label === 'Armor Check Penalty' && i.enabled).map(i => i.modifier)[0] || "" },

    { "pdf": "Lore1_Name", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.slug)[0] || '' },
    { "pdf": "Lore1", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.value < 0 ? skill.value : '+' + skill.value)[0] || "" },
    { "pdf": "Lore1_Mod", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'ability')[0]).map(i => '+' + i.modifier)[0] || '' },
    { "pdf": "Lore1_ProfMod", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'proficiency')[0]).map(i => '+' + i.modifier)[0] || '' },
    { "pdf": "Lore1_T", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'proficiency')[0]).map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[0] },
    { "pdf": "Lore1_E", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'proficiency')[0]).map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[0] },
    { "pdf": "Lore1_M", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'proficiency')[0]).map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[0] },
    { "pdf": "Lore1_L", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'proficiency')[0]).map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[0] },
    { "pdf": "Lore1_ItemMod", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'item')).map(i => i.modifier ? (i.modifier < 0 ? i.modifier : '+' + i.modifier) : '')[0] || '' },

    { "pdf": "Lore2_Name", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.slug)[1] || '' },
    { "pdf": "Lore2", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.value < 0 ? skill.value : '+' + skill.value)[1] || "" },
    { "pdf": "Lore2_Mod", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'ability')[0]).map(i => '+' + i.modifier)[1] || '' },
    { "pdf": "Lore2_ProfMod", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'proficiency')[0]).map(i => '+' + i.modifier)[1] || '' },
    { "pdf": "Lore2_T", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'proficiency')[0]).map(a => (a.slug === 'PF2E.ProficiencyLevel1' || a.label === 'Trained') || "")[1] },
    { "pdf": "Lore2_E", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'proficiency')[0]).map(a => (a.slug === 'PF2E.ProficiencyLevel2' || a.label === 'Expert') || "")[1] },
    { "pdf": "Lore2_M", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'proficiency')[0]).map(a => (a.slug === 'PF2E.ProficiencyLevel3' || a.label === 'Master') || "")[1] },
    { "pdf": "Lore2_L", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'proficiency')[0]).map(a => (a.slug === 'PF2E.ProficiencyLevel4' || a.label === 'Legendary') || "")[1] },
    { "pdf": "Lore2_ItemMod", "foundry": Object.values(actor.system.skills).filter(skill => skill.lore).map(skill => skill.modifiers.filter(i => i.type === 'item')).map(i => i.modifier ? (i.modifier < 0 ? i.modifier : '+' + i.modifier) : '')[1] || '' },


    /* ---------- PAGE 2 ----------*/

    {
        "pdf": "AncFeats", "foundry":
            @items._source.filter(i => i.type === 'feat' && (i.system.category === 'ancestryfeature' || i.system.category === 'heritage')).map(i => i.name ? i.system.level.value + ': ' + i.name : '').join('\n') + '\n' +
            @items._source.filter(i => i.type === 'feat' && i.system.location === 'ancestry-1').map(i => i.system.level.value ? i.system.level.value + ': ' + i.name + '\n' : '') +
            @items._source.filter(i => i.type === 'feat' && i.system.location === 'ancestry-5').map(i => i.system.level.value ? i.system.level.value + ': ' + i.name + '\n' : '') +
            @items._source.filter(i => i.type === 'feat' && i.system.location === 'ancestry-9').map(i => i.system.level.value ? i.system.level.value + ': ' + i.name + '\n' : '') +
            @items._source.filter(i => i.type === 'feat' && i.system.location === 'ancestry-13').map(i => i.system.level.value ? i.system.level.value + ': ' + i.name + '\n' : '') +
            @items._source.filter(i => i.type === 'feat' && i.system.location === 'ancestry-17').map(i => i.system.level.value ? i.system.level.value + ': ' + i.name : '')
    },

    {
        "pdf": "SkillFeats", "foundry":
            @items.filter(i => i.type === 'feat' && i.system.category === 'skill' && i.system.location?.slice(0, 8) !== 'general-').sort(
                (a, b) => (Number(a.system.location?.replace('skill-', '')) < Number(b.system.location?.replace('skill-', '')) ? -1 : (Number(a.system.location?.replace('skill-', '')) > Number(b.system.location?.replace('skill-', '')) ? 1 : 0))).map(
                    i => (Number(i.system.location?.replace('skill-', '')) || '') + ': ' + i.name + ' (' + i.system.level.value + ')').join('\n')
    },

    {
        "pdf": "GenFeats", "foundry":
            @items.filter(i => i.type === 'feat' && i.system.location?.slice(0, 8) === 'general-').map(i => i.system.level.value ? i.system.location?.replace('general-', '') + ': ' + i.name + ' (' + i.system.level.value + ')' : '').join('\n')
    },

    {
        "pdf": "ClassFeatures", "foundry":
            '--- Class Features ---\n' +
            @items.filter(i => i.type === 'feat' && i.system.category === 'classfeature' && i.system.location).sort(
                (a, b) => (a.system.level.value < b.system.level.value ? -1 : (a.system.level.value > b.system.level.value ? 1 : 0))).map(i => i.system.level.value + ': ' + i.name).join('\n') + '\n\n' +
            '--- Class Feats ---\n' +
            @items.filter(i => i.type === 'feat' && i.system.category === 'class' && i.system.location?.slice(0, 6) === 'class-').map(
                i => (i.system.location?.replace('class-', '') + ': ' || '') + i.name + ' (' + i.system.level.value + ')').join('\n') + '\n\n' +
            '--- Archetype Feats ---\n' +
            @items.filter(i => i.type === 'feat' && i.system.location?.slice(0, 10) === 'archetype-').map(
                i => (i.system.location?.replace('archetype-', '') + ': ' || '') + i.name + ' (' + i.system.level.value + ')').join('\n') + '\n'
    },

    {
        "pdf": "BonusFeats", "foundry":
        '--- Bonus Feats ---\n' +
        @items.filter(i => i.type === 'feat' && (! i.system.location)).sort(
            (a, b) => (a.system.level.value < b.system.level.value ? -1 : (a.system.level.value > b.system.level.value ? 1 : 0))).map(i => i.system.level.value + ': ' + i.name).join('\n') + '\n\n'

    },

    /*---------------------------INVENTORY-----------------------------*/

    {
        "pdf": "Containers", "foundry": 'In Eq --- Containers ---\n\n' +
            @items.filter(i => i.type === 'backpack').map(i => (i.isInvested ? ' ¤' : (i.isMagical ? ' ! ' : '    ')) +
                ((i.isEquipped || i.system.equipped.carryType === 'worn') ? ' [x]  ' : ' [  ]  ') +
                i.name + '   ' + i.capacity.value.normal + '; ' + i.capacity.value.light + 'L' + ' / ' + i.system.bulkCapacity.value + '\n' +
                i.contents.map(i => (i.isMagical ? ' !  ' : '    ') + '         ' + i.name + ((i.system.quantity > 1) ? ' (x' + i.system.quantity + ')' : '')).join('\n') || '').join('\n --------- \n')
    },

    {
        "pdf": "Inventory", "foundry": [('In Eq --- Weapons / Armor / Items ---\n'),
        (@items.filter(i => i.type === 'weapon' && !i.system.containerId).map(i => (i.isInvested ? ' !' : (i.isMagical ? ' ! ' : '   ')) + ((i.isEquipped || i.system.equipped.carryType === 'held') ? ' [x]  ' : ' [  ]  ') + i.name + (i.system.weight.value !== '-' ? ' (B: ' + i.system.weight.value + ')' : '') || '').join('\n')),
            '---------',
        (@items.filter(i => i.type === 'armor' && !i.system.containerId).map(i => (i.isInvested ? ' ¤' : (i.isMagical ? ' - ' : '   ')) + ((i.isEquipped || i.system.equipped.carryType === 'worn') ? ' [x]  ' : ' [  ]  ') + i.name + (i.system.weight.value !== '-' ? (i.isEquipped ? ' (B: ' + i.system.equippedBulk.value + ')' : ' (B: ' + i.system.weight.value + ')') : '') || '').join('\n')),
            '---------',
        (@items.filter(i => i.type === 'equipment' && !i.system.containerId).map(i => (i.isInvested ? ' ¤' : (i.isMagical ? ' - ' : '   ')) + ((i.isEquipped ? i.isEquipped : (i.system.equipped.carryType === 'worn' && i.system.usage.value === 'worn')) ? ' [x]  ' : ' [  ]  ') + i.name + (i.system.weight.value !== '-' ? ' (B: ' + i.system.weight.value + ')' : '') || '').join('\n')),
        ].filter(x => String(x)).join('\n')
    },

    {
        "pdf": "Consumables", "foundry": 'M Eq --- Consumables ---\n\n' +
            (@items.filter(i => i.type === 'consumable' && !i.system.containerId).map(i => (i.isMagical ? ' ! ' : '   ') + (i.isEquipped ? ' [x] ' : ' [  ] ') + i.name.replace('Level', 'lvl') + ' ' +
                ((i.system.quantity > 1) ? '(x' + i.system.quantity + ')' : '')
                + (i.system.weight.value !== '-' ? ' (B: ' + i.system.weight.value + ')' : '') || '').join('\n')),
    },

    { "pdf": "Copper", "foundry": @items.filter(i => i.type === 'treasure' && i.name === 'Copper Pieces').map(i => i.system.quantity).reduce((partialSum, a) => partialSum + a, 0) || 0 },
    { "pdf": "Silver", "foundry": @items.filter(i => i.type === 'treasure' && i.name === 'Silver Pieces').map(i => i.system.quantity).reduce((partialSum, a) => partialSum + a, 0) || 0 },
    { "pdf": "Gold", "foundry": @items.filter(i => i.type === 'treasure' && i.name === 'Gold Pieces').map(i => i.system.quantity).reduce((partialSum, a) => partialSum + a, 0) || 0 },
    { "pdf": "Platinum", "foundry": @items.filter(i => i.type === 'treasure' && i.name === 'Platinum Pieces').map(i => i.system.quantity).reduce((partialSum, a) => partialSum + a, 0) || 0 },


    { "pdf": "CurrentBulk", "foundry": actor.inventory.bulk.value.normal },
    { "pdf": "EncumberedValue", "foundry": 5 + @system.abilities.str.mod + @system.attributes.bonusEncumbranceBulk },
    { "pdf": "BulkStrMod1", "foundry": (@system.abilities.str.mod < 0 ? @system.abilities.str.mod : '+' + @system.abilities.str.mod) + (@system.attributes.bonusEncumbranceBulk ? '(+' + @system.attributes.bonusEncumbranceBulk + ')' : '') },
    { "pdf": "MaxBulkValue", "foundry": 10 + @system.abilities.str.mod + @system.attributes.bonusLimitBulk },
    { "pdf": "BulkStrMod2", "foundry": (@system.abilities.str.mod < 0 ? @system.abilities.str.mod : '+' + @system.abilities.str.mod) + (@system.attributes.bonusLimitBulk ? '(+' + @system.attributes.bonusLimitBulk + ')' : '') },


    /* ---------- PAGE 3 ----------*/

    { "pdf": "Ethnicity", "foundry": @system.details.ethnicity.value || '' },
    { "pdf": "Nationality", "foundry": @system.details.nationality.value || '' },

    { "pdf": "Birthplace", "foundry": @system.details.biography.birthPlace || '' },

    { "pdf": "Age", "foundry": @system.details.age.value || '' },
    { "pdf": "GenderPronouns", "foundry": @system.details.gender.value || '' },

    { "pdf": "Height", "foundry": @system.details.height.value || '' },
    { "pdf": "Weight", "foundry": @system.details.weight.value || '' },

    { "pdf": "Appearance", "foundry": @system.details.biography.appearance.replace('<p>', '').replace('</p>', '') || '' },

    { "pdf": "Attitude", "foundry": @system.details.biography.attitude || '' },
    { "pdf": "Beliefs", "foundry": @system.details.biography.beliefs || '' },
    { "pdf": "Likes", "foundry": @system.details.biography.likes || '' },
    { "pdf": "Dislikes", "foundry": @system.details.biography.dislikes || '' },
    { "pdf": "Catchphrases", "foundry": @system.details.biography.catchphrases || '' },

    { "pdf": "CampaignNotes", "foundry": @system.details.biography.campaignNotes.replace('<p>', '').replace('</p>', '') || '' },

    { "pdf": "Allies", "foundry": @system.details.biography.allies.replace('<p>', '').replace('</p>', '') || '' },
    { "pdf": "Enemies", "foundry": @system.details.biography.enemies.replace('<p>', '').replace('</p>', '') || '' },

    { "pdf": "Organizations", "foundry": @system.details.biography.organaizations?.replace('<p>', '').replace('</p>', '') || '' },


    /* ACTIONS AND ACTIVITIES */

    {
        "pdf": "Actions", "foundry": ' Action -----------------\n\n' +
            [(@items.filter(i => (i.type === 'feat' || i.type === 'action') && i.system.actionType.value === 'action').map(i => ' [ ' + i.system.actions.value + ' ] ' + i.name || "").join('\n') || ''),
                '\n Free Action -----------------\n', (@items.filter(i => (i.type === 'feat' || i.type === 'action') && i.system.actionType.value === 'free').map(i => ' [F] ' + i.name || "").join('\n') || ''),
                '\n Reaction -----------------\n', (@items.filter(i => (i.type === 'feat' || i.type === 'action') && i.system.actionType.value === 'reaction').map(i => ' [R] ' + i.name || "").join('\n') || '')].join('\n')
    },



    /* ---------- PAGE 4 ----------*/

    {
        "pdf": "SpellAttack", "foundry":
            (@items.filter(i => i.type === 'spellcastingEntry').map(i => i.statistic.check.mod)[0]
                ||
                @items.filter(i => i.type === 'spellcastingEntry').map(i => i.statistic.modifiers)[0]?.filter(a => a.type === 'ability').map(a => a.modifier)[0] +
                @items.filter(i => i.type === 'spellcastingEntry').map(i => i.statistic.modifiers)[0]?.filter(a => a.type === 'proficiency').map(a => a.modifier)[0]) || ''
    },

    {
        "pdf": "SpellAtk_KeyMod", "foundry":

            (@items.filter(i => i.type === 'spellcastingEntry').map(i => i.statistic.ability)[0]) ?
                '+' + @system.abilities[@items.filter(i => i.type === 'spellcastingEntry').map(i => i.statistic.ability)[0]].mod : ""
    },

    { "pdf": "SpellAtk_ProfMod", "foundry": @items.filter(i => i.type === 'spellcastingEntry').map(i => i.system.proficiency.value ? '+' + ((i.system.proficiency.value * 2) + @system.details.level.value) : '+0')[0] || '' },

    { "pdf": "SpellAtk_T", "foundry": @items.filter(i => i.type === 'spellcastingEntry').map(i => (i.system.proficiency.value === 1) || "")[0] },
    { "pdf": "SpellAtk_E", "foundry": @items.filter(i => i.type === 'spellcastingEntry').map(i => (i.system.proficiency.value === 2) || "")[0] },
    { "pdf": "SpellAtk_M", "foundry": @items.filter(i => i.type === 'spellcastingEntry').map(i => (i.system.proficiency.value === 3) || "")[0] },
    { "pdf": "SpellAtk_L", "foundry": @items.filter(i => i.type === 'spellcastingEntry').map(i => (i.system.proficiency.value === 4) || "")[0] },

    {
        "pdf": "SpellDC", "foundry":
            (
                @items.filter(i => i.type === 'spellcastingEntry').map(i => i.statistic.modifiers)[0]?.filter(a => a.type === 'ability').map(a => a.modifier)[0] +
                @items.filter(i => i.type === 'spellcastingEntry').map(i => i.statistic.modifiers)[0]?.filter(a => a.type === 'proficiency').map(a => a.modifier)[0] + 10) || ''
    },

    {
        "pdf": "SpellDC_KeyMod", "foundry": (@items.filter(i => i.type === 'spellcastingEntry').map(i => i.statistic.ability)[0]) ?
            '+' + @system.abilities[@items.filter(i => i.type === 'spellcastingEntry').map(i => i.statistic.ability)[0]].mod : ""
    },
    { "pdf": "SpellDC_ProfMod", "foundry": @items.filter(i => i.type === 'spellcastingEntry').map(i => i.system.proficiency.value ? '+' + ((i.system.proficiency.value * 2) + @system.details.level.value) : '+0')[0] || '' },

    { "pdf": "SpellDC_T", "foundry": @items.filter(i => i.type === 'spellcastingEntry').map(i => (i.system.proficiency.value === 1) || "")[0] },
    { "pdf": "SpellDC_E", "foundry": @items.filter(i => i.type === 'spellcastingEntry').map(i => (i.system.proficiency.value === 2) || "")[0] },
    { "pdf": "SpellDC_M", "foundry": @items.filter(i => i.type === 'spellcastingEntry').map(i => (i.system.proficiency.value === 3) || "")[0] },
    { "pdf": "SpellDC_L", "foundry": @items.filter(i => i.type === 'spellcastingEntry').map(i => (i.system.proficiency.value === 4) || "")[0] },

    { "pdf": "Arcane", "foundry": actor.spellcasting.filter(i => i.system?.tradition?.value === 'arcane' && i.system.prepared.value === "spontaneous").map(i => i.name)[0] ? 'S' : (actor.spellcasting.filter(i => i.system?.tradition?.value === 'arcane' && i.system.prepared.value === "prepared").map(i => i.name)[0] ? 'P' : '') },
    { "pdf": "Occult", "foundry": actor.spellcasting.filter(i => i.system?.tradition?.value === 'occult' && i.system.prepared.value === "spontaneous").map(i => i.name)[0] ? 'S' : (actor.spellcasting.filter(i => i.system?.tradition?.value === 'occult' && i.system.prepared.value === "prepared").map(i => i.name)[0] ? 'P' : '') },
    { "pdf": "Primal", "foundry": actor.spellcasting.filter(i => i.system?.tradition?.value === 'primal' && i.system.prepared.value === "spontaneous").map(i => i.name)[0] ? 'S' : (actor.spellcasting.filter(i => i.system?.tradition?.value === 'primal' && i.system.prepared.value === "prepared").map(i => i.name)[0] ? 'P' : '') },
    { "pdf": "Divine", "foundry": actor.spellcasting.filter(i => i.system?.tradition?.value === 'divine' && i.system.prepared.value === "spontaneous").map(i => i.name)[0] ? 'S' : (actor.spellcasting.filter(i => i.system?.tradition?.value === 'divine' && i.system.prepared.value === "prepared").map(i => i.name)[0] ? 'P' : '') },


    {
        "pdf": "Cantrips", "foundry": ' Act Lvl  Mat \n' + (@items.filter(i => i.type === 'spell' && i.isCantrip)
            .map(i => ' [ ' + ((i.system.time.value === '1' || i.system.time.value === '2' || i.system.time.value === '3') ? i.system.time.value : '*') + ' ]' +
                ' C ' +
                ' (' + (i.system.components.material ? 'm' : '  ') + (i.system.components.somatic ? 's' : '  ') + (i.system.components.verbal ? 'v' : '  ') + ') ' +
                i.name +
                ((i.system.time.value === '1' || i.system.time.value === '2' || i.system.time.value === '3') ? '' : '   [* ' + i.system.time.value + ' ]')
            ) || '').join('\n') || ''
    },


    {
        "pdf": "Spells", "foundry":
            (@items.filter(i => i.type === 'spellcastingEntry')
                .map(i => ' --- ' + i.name + ' --- \n' +
                    'Slots: ' + (i.system.slots?.slot0?.max ?? '') + '/' + (i.system.slots?.slot1?.max ?? '') + '/' + (i.system.slots?.slot2?.max ?? '') + '/' + (i.system.slots?.slot3?.max ?? '') +
                    '/' + (i.system.slots?.slot4?.max ?? '') + '/' + (i.system.slots?.slot5?.max ?? '') + '/' + (i.system.slots?.slot6?.max ?? '') + '/' + (i.system.slots?.slot7?.max ?? '') +
                    '/' + (i.system.slots?.slot8?.max ?? '') + '/' + (i.system.slots?.slot9?.max ?? '') + '/' + (i.system.slots?.slot10?.max ?? '') + '\n' +
                    ' Act Lvl  Mat Name\n' +
                    i.spells.filter(a => a.isCantrip === true || a.isCantrip === false)
                        .map(b => ' [ ' + ((b.system.time.value === '1' || b.system.time.value === '2' || b.system.time.value === '3') ? b.system.time.value : '*') + ' ]' +
                            (b.isCantrip ? ' C ' : ' L' + b.system.level.value) + ' (' + (b.system.components.material ? 'm' : '  ') + (b.system.components.somatic ? 's' : '  ') + (b.system.components.verbal ? 'v' : '  ') + ') ' +
                            b.name + ((b.system.time.value === '1' || b.system.time.value === '2' || b.system.time.value === '3') ? '' : '   [* ' + b.system.time.value + ' ]'))
                        .join('\n') ?? ''
                    + ' \n' ?? '').join('\n\n') ?? '')
    },

    { "pdf": "CantripLevel", "foundry": @items.filter(i => i.type === 'spell' && i.isCantrip)[0] ? Math.round(@system.details.level.value / 2) : '' },

    { "pdf": "Lvl1_Slots", "foundry": @items.filter(i => i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'prepared').map(
        i => (i.spells.entry.system.slots.slot1.max > 0) ? i.spells.entry.system.slots.slot1.max : 0).reduce((accum, current) => accum + current, 0) },
    { "pdf": "Lvl2_Slots", "foundry": @items.filter(i => i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'prepared').map(
        i => (i.spells.entry.system.slots.slot2.max > 0) ? i.spells.entry.system.slots.slot2.max : 0).reduce((accum, current) => accum + current, 0) },
    { "pdf": "Lvl3_Slots", "foundry": @items.filter(i => i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'prepared').map(
        i => (i.spells.entry.system.slots.slot3.max > 0) ? i.spells.entry.system.slots.slot3.max : 0).reduce((accum, current) => accum + current, 0) },
    { "pdf": "Lvl4_Slots", "foundry": @items.filter(i => i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'prepared').map(
        i => (i.spells.entry.system.slots.slot4.max > 0) ? i.spells.entry.system.slots.slot4.max : 0).reduce((accum, current) => accum + current, 0) },
    { "pdf": "Lvl5_Slots", "foundry": @items.filter(i => i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'prepared').map(
        i => (i.spells.entry.system.slots.slot5.max > 0) ? i.spells.entry.system.slots.slot5.max : 0).reduce((accum, current) => accum + current, 0) },
    { "pdf": "Lvl6_Slots", "foundry": @items.filter(i => i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'prepared').map(
        i => (i.spells.entry.system.slots.slot6.max > 0) ? i.spells.entry.system.slots.slot6.max : 0).reduce((accum, current) => accum + current, 0) },
    { "pdf": "Lvl7_Slots", "foundry": @items.filter(i => i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'prepared').map(
        i => (i.spells.entry.system.slots.slot7.max > 0) ? i.spells.entry.system.slots.slot7.max : 0).reduce((accum, current) => accum + current, 0) },
    { "pdf": "Lvl8_Slots", "foundry": @items.filter(i => i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'prepared').map(
        i => (i.spells.entry.system.slots.slot8.max > 0) ? i.spells.entry.system.slots.slot8.max : 0).reduce((accum, current) => accum + current, 0) },
    { "pdf": "Lvl9_Slots", "foundry": @items.filter(i => i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'prepared').map(
        i => (i.spells.entry.system.slots.slot9.max > 0) ? i.spells.entry.system.slots.slot9.max : 0).reduce((accum, current) => accum + current, 0) },
    { "pdf": "Lvl10_Slots", "foundry": @items.filter(i => i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'prepared').map(
        i => (i.spells.entry.system.slots.slot10.max > 0) ? i.spells.entry.system.slots.slot10.max : 0).reduce((accum, current) => accum + current, 0) },

    /*
       { "pdf": "Lvl1_Remain", "foundry": @items.filter(i=> i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'spontaneous').map(i=> (i.spells.entry.system.slots.slot1.max > 0)?   i.spells.entry.system.slots.slot1.max - i.spells.entry.system.slots.slot1.value : '-' )[0] || '' },
       { "pdf": "Lvl2_Remain", "foundry": @items.filter(i=> i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'spontaneous').map(i=> (i.spells.entry.system.slots.slot2.max > 0)?   i.spells.entry.system.slots.slot2.max - i.spells.entry.system.slots.slot2.value : '-' )[0] || '' },
       { "pdf": "Lvl3_Remain", "foundry": @items.filter(i=> i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'spontaneous').map(i=> (i.spells.entry.system.slots.slot3.max > 0)?   i.spells.entry.system.slots.slot3.max - i.spells.entry.system.slots.slot3.value : '-' )[0] || '' },
       { "pdf": "Lvl4_Remain", "foundry": @items.filter(i=> i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'spontaneous').map(i=> (i.spells.entry.system.slots.slot4.max > 0)?   i.spells.entry.system.slots.slot4.max - i.spells.entry.system.slots.slot4.value : '-' )[0] || '' },
       { "pdf": "Lvl5_Remain", "foundry": @items.filter(i=> i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'spontaneous').map(i=> (i.spells.entry.system.slots.slot5.max > 0)?   i.spells.entry.system.slots.slot5.max - i.spells.entry.system.slots.slot5.value : '-' )[0] || '' },
       { "pdf": "Lvl6_Remain", "foundry": @items.filter(i=> i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'spontaneous').map(i=> (i.spells.entry.system.slots.slot6.max > 0)?   i.spells.entry.system.slots.slot6.max - i.spells.entry.system.slots.slot6.value : '-' )[0] || '' },
       { "pdf": "Lvl7_Remain", "foundry": @items.filter(i=> i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'spontaneous').map(i=> (i.spells.entry.system.slots.slot7.max > 0)?   i.spells.entry.system.slots.slot7.max - i.spells.entry.system.slots.slot7.value : '-' )[0] || '' },
       { "pdf": "Lvl8_Remain", "foundry": @items.filter(i=> i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'spontaneous').map(i=> (i.spells.entry.system.slots.slot8.max > 0)?   i.spells.entry.system.slots.slot8.max - i.spells.entry.system.slots.slot8.value : '-' )[0] || '' },
       { "pdf": "Lvl9_Remain", "foundry": @items.filter(i=> i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'spontaneous').map(i=> (i.spells.entry.system.slots.slot9.max > 0)?   i.spells.entry.system.slots.slot9.max - i.spells.entry.system.slots.slot9.value : '-' )[0] || '' },
       { "pdf": "Lvl10_Remain", "foundry": @items.filter(i=> i.type === 'spellcastingEntry' && i.spells.entry.system.prepared.value === 'spontaneous').map(i=> (i.spells.entry.system.slots.slot10.max > 0)?   i.spells.entry.system.slots.slot10.max - i.spells.entry.system.slots.slot10.value : '-' )[0] || '' },
    */

    /* ---------- OPTIONAL PAGE 5 ----------*/
    {
        "pdf": "AncestryFullDescription", "foundry":
            ((@feats.filter(i => i.id === "ancestryfeature").map(i => i.id)[0] ? '  --- Ancestry --- \n' +
                @feats.filter(i => i.id === "ancestryfeature").map(i => i.feats)[0].map(a => "  [0] " + a.feat?.name + ": " +
                    ((h) => { const d = document.createElement("div");
                              d.innerHTML = h;
                              return d.textContent.replaceAll(/.UUID\[.*?\]/gis, '') || d.innerText.replaceAll(/.UUID\[.*?\]/gis, '') || "";
                            })(a.feat?.system.description.value)).join('~~~').replaceAll('\n\n','\n').replaceAll('~~~','\n\n') : '') +
                (@feats.filter(i => i.id === "ancestry").map(i => i.id)[0] ? '\n\n  --- Ancestry Feats --- \n' +
                    @feats.filter(i => i.id === "ancestry").map(i => i.feats)[0].map(a => "  [" + a.id.replace('ancestry-', '') + "] " + a.feat?.name + ": " +
                        ((h) => { const d = document.createElement("div");
                                  d.innerHTML = h;
                                  return d.textContent.replaceAll(/.UUID\[.*?\]/gis, '') || d.innerText.replaceAll(/.UUID\[.*?\]/gis, '') || "";
                                })(a.feat?.description || " ")).join('~~~').replaceAll('\n\n','\n').replaceAll('~~~','\n\n') : ''))
    },

    /* ---------- OPTIONAL PAGE 6 ----------*/

    {
        "pdf": "SkillFullDescription", "foundry":
            ((@feats.filter(i => i.id === "skill").map(i => i.id)[0] ? '\n\n  --- Skill Feats --- \n' +
                @feats.filter(i => i.id === "skill").map(i => i.feats)[0].map(a => "  [" + a.id.replace('skill-', '') + "] " + a.feat?.name + ": " +
                    ((h) => { const d = document.createElement("div");
                              d.innerHTML = h;
                              return d.textContent.replaceAll(/.UUID\[.*?\]/gis, '') || d.innerText.replaceAll(/.UUID\[.*?\]/gis, '') || "";
                            })(a.feat?.description || " ")).join('~~~').replaceAll('\n\n','\n').replaceAll('~~~','\n\n') : ''))
    },

    /* ---------- OPTIONAL PAGE 7 ----------*/

    {
        "pdf": "ClassFullDescription", "foundry":
            ((@feats.filter(i => i.id === "classfeature").map(i => i.id)[0] ? '\n\n  --- Class --- \n' +
                @feats.filter(i => i.id === "classfeature").map(i => i.feats)[0].map(a => '  [' + a.feat.system.level.value + '] ' + a.feat?.name + ": " +
                    ((h) => { const d = document.createElement("div");
                              d.innerHTML = h;
                              return d.textContent.replaceAll(/.UUID\[.*?\]/gis, '') || d.innerText.replaceAll(/.UUID\[.*?\]/gis, '') || "";
                            })(a.feat?.description || " ")).join('~~~').replaceAll('\n\n','\n').replaceAll('~~~','\n\n') : '') +
                (@feats.filter(i => i.id === "class").map(i => i.id)[0] ? '\n\n  --- Class Feats --- \n' +
                    @feats.filter(i => i.id === "class").map(i => i.feats)[0].map(a => "  [" + a.id.replace('class-', '') + "] " + a.feat?.name + ": " +
                        ((h) => { const d = document.createElement("div");
                                  d.innerHTML = h;
                                  return d.textContent.replaceAll(/.UUID\[.*?\]/gis, '') || d.innerText.replaceAll(/.UUID\[.*?\]/gis, '') || "";
                                })(a.feat?.description || " ")).join('~~~').replaceAll('\n\n','\n').replaceAll('~~~','\n\n') : ''))
    },

    /* ---------- OPTIONAL PAGE 8 ----------*/

    {
        "pdf": "ArchetypeGeneralFullDescription", "foundry":
            (
                (@feats.filter(i => i.id === "general").map(i => i.id)[0] ? '\n\n  --- General Feats --- \n' +
                    @feats.filter(i => i.id === "general").map(i => i.feats)[0].map(a => "  [" + a.id.replace('general-', '') + "] " + a.feat?.name + ": " +
                        ((h) => { const d = document.createElement("div");
                                  d.innerHTML = h;
                                  return d.textContent.replaceAll(/.UUID\[.*?\]/gis, '') || d.innerText.replaceAll(/.UUID\[.*?\]/gis, '') || "";
                                })(a.feat?.description || " ")).join('~~~').replaceAll('\n\n','\n').replaceAll('~~~','\n\n') : ''
                ) +
                (@items.filter(i => i.type === 'feat' && i.system.location?.slice(0, 10) === 'archetype-').map(i => i.id)[0] ? '\n\n  --- Archetype Feats --- \n' +
                    @items.filter(i => i.type === 'feat' && i.system.location?.slice(0, 10) === 'archetype-').map(i => (i.system.location?.replace('archetype-', '') + ': ' || '') + i.name + ' (' + i.system.level.value + ') ' +
                        ((h) => { const d = document.createElement("div");
                                  d.innerHTML = h;
                                  return d.textContent.replaceAll(/.UUID\[.*?\]/gis, '') || d.innerText.replaceAll(/.UUID\[.*?\]/gis, '') || "";
                                })(i.system.description.value || " ")).join('~~~').replaceAll('\n\n','\n').replaceAll('~~~','\n\n') : ''
                ) +
                (@items.filter(i => i.type === 'feat' && (!i.system.location)).map(i => i.id)[0] ? '\n\n  --- Bonus Feats --- \n' +
                    @items.filter(i => i.type === 'feat' && (!i.system.location)).map(i => i.name + ' (' + i.system.level.value + ') ' +
                        ((h) => { const d = document.createElement("div");
                                  d.innerHTML = h;
                                  return d.textContent.replaceAll(/.UUID\[.*?\]/gis, '') || d.innerText.replaceAll(/.UUID\[.*?\]/gis, '') || "";
                                })(i.system.description.value) || " ").join('~~~').replaceAll('\n\n','\n').replaceAll('~~~','\n\n') : ''
                )
            )
    },

    /* ---------- OPTIONAL PAGE 9 ----------*/

    {
        "pdf": "SpellsFullDescription", "foundry":
            '  --------  Spell Descriptions  ----------\n\n' +
            (@items.filter(i => i.type === 'spellcastingEntry')
                .map(i => ' --- ' + i.name + ' --- \n' +
                    'Slots: ' + (i.system.slots?.slot0?.max ?? '') + '/' + (i.system.slots?.slot1?.max ?? '') + '/' + (i.system.slots?.slot2?.max ?? '') + '/' + (i.system.slots?.slot3?.max ?? '') +
                    '/' + (i.system.slots?.slot4?.max ?? '') + '/' + (i.system.slots?.slot5?.max ?? '') + '/' + (i.system.slots?.slot6?.max ?? '') + '/' + (i.system.slots?.slot7?.max ?? '') +
                    '/' + (i.system.slots?.slot8?.max ?? '') + '/' + (i.system.slots?.slot9?.max ?? '') + '/' + (i.system.slots?.slot10?.max ?? '') + '\n' +
                    ' Act Lvl  Mat Name\n' +
                    i.spells.filter(a => a.isCantrip === true || a.isCantrip === false)
                        .map(b => ' [ ' + ((b.system.time.value === '1' || b.system.time.value === '2' || b.system.time.value === '3') ? b.system.time.value : '*' + b.system.time.value) + ' ]' +
                            (b.isCantrip ? ' C ' : ' L' + b.system.level.value) + ' (' + (b.system.components.material ? 'm' : '  ') + (b.system.components.somatic ? 's' : '  ') + (b.system.components.verbal ? 'v' : '  ') + ') ' +
                            b.name + ": " +
                            ((h) => { const d = document.createElement("div");
                                      d.innerHTML = h;
                                      return d.textContent.replaceAll(/.UUID\[.*?\]/gis, '') || d.innerText.replaceAll(/.UUID\[.*?\]/gis, '') || "";
                                    })(b.system.description.value)).join('~~~').replaceAll('\n\n','\n').replaceAll('~~~','\n\n') ?? '' + ' \n' ?? '').join('\n\n') ?? '')
    },

    /* ---------- OPTIONAL PAGE 10 ----------*/

    {
        "pdf": "ActionsFullDescription", "foundry":
            [' Action -----------------\n\n',
                (@items.filter(i => (i.type === 'feat' || i.type === 'action') && i.system.actionType.value === 'action').map(i => ' [ ' + i.system.actions.value + ' ] ' + i.name + ': ' +
                    ((h) => { const d = document.createElement("div");
                              d.innerHTML = h;
                              return d.textContent.replaceAll(/.UUID\[.*?\]/gis, '') || d.innerText.replaceAll(/.UUID\[.*?\]/gis, '') || "";
                            })(i.system.description.value)).join('~~~').replaceAll('\n\n','\n').replaceAll('~~~','\n\n') || ''),
                '\n Free Action -----------------\n',
                (@items.filter(i => (i.type === 'feat' || i.type === 'action') && i.system.actionType.value === 'free').map(i => ' [F] ' + i.name + ': ' +
                    ((h) => { const d = document.createElement("div");
                              d.innerHTML = h;
                              return d.textContent.replaceAll(/.UUID\[.*?\]/gis, '') || d.innerText.replaceAll(/.UUID\[.*?\]/gis, '') || "";
                            })(i.system.description.value)).join('~~~').replaceAll('\n\n','\n').replaceAll('~~~','\n\n') || ''),
                '\n Reaction -----------------\n',
                (@items.filter(i => (i.type === 'feat' || i.type === 'action') && i.system.actionType.value === 'reaction').map(i => ' [R] ' + i.name + ': ' +
                    ((h) => { const d = document.createElement("div");
                              d.innerHTML = h;
                              return d.textContent.replaceAll(/.UUID\[.*?\]/gis, '') || d.innerText.replaceAll(/.UUID\[.*?\]/gis, '') || "";
                            })(i.system.description.value)).join('~~~').replaceAll('\n\n','\n').replaceAll('~~~','\n\n') || '')].join('\n')
    }


]

