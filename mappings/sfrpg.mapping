[
    /* Page #1 */
	{ "pdf": "Character Name", "foundry": actor.name },
{ "pdf": "Class/Level", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.name) + " / " + actor.system.details.level.value },
{ "pdf": "Race", "foundry": actor.system.details.race },
{ "pdf": "Theme", "foundry": actor.system.details.theme },
{ "pdf": "Size", "foundry": actor.system.traits.size },
{ "pdf": "Speed", "foundry": actor.system.attributes.speed.land.base > 0 ? actor.system.attributes.speed.land.base + "ft (land)" : actor.system.attributes.speed.flying.base > 0 ? actor.system.attributes.speed.flying.base + "ft (flying)" : actor.system.attributes.speed.swimming.base > 0 ? actor.system.attributes.speed.swimming.base + "ft (swimming)" : actor.system.attributes.speed.burrowing.base > 0 ? actor.system.attributes.speed.burrowing.base + "ft (burrowing)" : actor.system.attributes.speed.climbing.base > 0 ? actor.system.attributes.speed.climbing.base + "ft (climbing)" : "special" },
{ "pdf": "Gender", "foundry": actor.system.details.biography.genderPronouns },
{ "pdf": "Homeworld", "foundry": actor.system.details.biography.homeWorld },
{ "pdf": "Alignment", "foundry": actor.system.details.alignment },
{ "pdf": "Diety", "foundry": actor.system.details.biography.deity },
{ "pdf": "Player Name", "foundry": Object.entries(actor.ownership).filter(entry => entry[1] === 3).map(entry => entry[0]).map(id => !game.users.get(id)?.isGM ? game.users.get(id)?.name : null).filter(x => x).join(", ") },
{ "pdf": "Description 1", "foundry": "Senses: " + actor.system.traits.senses },
{ "pdf": "Description 2", "foundry": "Age: " + actor.system.details.biography.age + ", date of birth: " + actor.system.details.biography.dateOfBirth},
{ "pdf": "Description 3", "foundry": "Height: " + actor.system.details.biography.height + ", weight: " + actor.system.details.biography.weight },
{ "pdf": "Description 4", "foundry": "Appearance: " + actor.system.details.biography.otherVisuals },
{ "pdf": "STR 1", "foundry": actor.system.abilities.str.value },
{ "pdf": "STR 2", "foundry": actor.system.abilities.str.mod },
{ "pdf": "STR 3", "foundry": "" },
{ "pdf": "STR 4", "foundry": "" },
{ "pdf": "DEX 1", "foundry": actor.system.abilities.dex.value },
{ "pdf": "DEX 2", "foundry": actor.system.abilities.dex.mod },
{ "pdf": "DEX 3", "foundry": "" },
{ "pdf": "DEX 4", "foundry": "" },
{ "pdf": "CON 1", "foundry": actor.system.abilities.con.value },
{ "pdf": "CON 2", "foundry": actor.system.abilities.con.mod },
{ "pdf": "CON 3", "foundry": "" },
{ "pdf": "CON 4", "foundry": "" },
{ "pdf": "INT 1", "foundry": actor.system.abilities.int.value },
{ "pdf": "INT 2", "foundry": actor.system.abilities.int.mod },
{ "pdf": "INT 3", "foundry": "" },
{ "pdf": "INT 4", "foundry": "" },
{ "pdf": "WIS 1", "foundry": actor.system.abilities.wis.value },
{ "pdf": "WIS 2", "foundry": actor.system.abilities.wis.mod },
{ "pdf": "WIS 3", "foundry": "" },
{ "pdf": "WIS 4", "foundry": "" },
{ "pdf": "CHA 1", "foundry": actor.system.abilities.cha.value },
{ "pdf": "CHA 2", "foundry": actor.system.abilities.cha.mod },
{ "pdf": "CHA 3", "foundry": "" },
{ "pdf": "CHA 4", "foundry": "" },
{ "pdf": "Skill Ranks", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.skillRanks.value) },
{ "pdf": "Check Acr", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.acr)[0] },
{ "pdf": "Check Ath", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.ath)[0] },
{ "pdf": "Check Blu", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.blu)[0] },
{ "pdf": "Check Com", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.com)[0] },
{ "pdf": "Check Cul", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.cul)[0] },
{ "pdf": "Check Dip", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.dip)[0] },
{ "pdf": "Check Dis", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.dis)[0] },
{ "pdf": "Check Eng", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.eng)[0] },
{ "pdf": "Check Int", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.int)[0] },
{ "pdf": "Check Lif", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.lsc)[0] },
{ "pdf": "Check Med", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.med)[0] },
{ "pdf": "Check Mys", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.mys)[0] },
{ "pdf": "Check Per", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.per)[0] },
{ "pdf": "Check Phy", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.phs)[0] },
{ "pdf": "Check Pil", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.pil)[0] },
{ "pdf": "Check Pro 1", "foundry": true },
{ "pdf": "Check Pro 2", "foundry": true },
{ "pdf": "Check Sen", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.sen)[0] },
{ "pdf": "Check Sle", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.sle)[0] },
{ "pdf": "Check Ste", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.ste)[0] },
{ "pdf": "Check Sur", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.sur)[0] },
{ "pdf": "Skill Total Acr", "foundry": actor.system.skills.acr.mod },
{ "pdf": "Skill Total Ath", "foundry": actor.system.skills.ath.mod },
{ "pdf": "Skill Total Blu", "foundry": actor.system.skills.blu.mod },
{ "pdf": "Skill Total Com", "foundry": actor.system.skills.com.mod },
{ "pdf": "Skill Total Cul", "foundry": actor.system.skills.cul.mod },
{ "pdf": "Skill Total Dip", "foundry": actor.system.skills.dip.mod },
{ "pdf": "Skill Total Dis", "foundry": actor.system.skills.dis.mod },
{ "pdf": "Skill Total Eng", "foundry": actor.system.skills.eng.mod },
{ "pdf": "Skill Total Int", "foundry": actor.system.skills.int.mod },
{ "pdf": "Skill Total Lif", "foundry": actor.system.skills.lsc.mod },
{ "pdf": "Skill Total Med", "foundry": actor.system.skills.med.mod },
{ "pdf": "Skill Total Mys", "foundry": actor.system.skills.mys.mod },
{ "pdf": "Skill Total Per", "foundry": actor.system.skills.per.mod },
{ "pdf": "Skill Total Phy", "foundry": actor.system.skills.phs.mod },
{ "pdf": "Skill Total Pil", "foundry": actor.system.skills.pil.mod },
{ "pdf": "Skill Total Pro 1", "foundry": actor.system.skills.pro.mod },
{ "pdf": "Skill Total Pro 2", "foundry": actor.system.skills.pro1?.mod || "" },
{ "pdf": "Skill Total Sen", "foundry": actor.system.skills.sen.mod },
{ "pdf": "Skill Total Sle", "foundry": actor.system.skills.sle.mod },
{ "pdf": "Skill Total Ste", "foundry": actor.system.skills.ste.mod },
{ "pdf": "Skill Total Sur", "foundry": actor.system.skills.sur.mod },
{ "pdf": "Skill Ranks Acr", "foundry": actor.system.skills.acr.ranks },
{ "pdf": "Skill Ranks Ath", "foundry": actor.system.skills.ath.ranks },
{ "pdf": "Skill Ranks Blu", "foundry": actor.system.skills.blu.ranks },
{ "pdf": "Skill Ranks Com", "foundry": actor.system.skills.com.ranks },
{ "pdf": "Skill Ranks Cul", "foundry": actor.system.skills.cul.ranks },
{ "pdf": "Skill Ranks Dip", "foundry": actor.system.skills.dip.ranks },
{ "pdf": "Skill Ranks Dis", "foundry": actor.system.skills.dis.ranks },
{ "pdf": "Skill Ranks Eng", "foundry": actor.system.skills.eng.ranks },
{ "pdf": "Skill Ranks Int", "foundry": actor.system.skills.int.ranks },
{ "pdf": "Skill Ranks Lif", "foundry": actor.system.skills.lsc.ranks },
{ "pdf": "Skill Ranks Med", "foundry": actor.system.skills.med.ranks },
{ "pdf": "Skill Ranks Mys", "foundry": actor.system.skills.mys.ranks },
{ "pdf": "Skill Ranks Per", "foundry": actor.system.skills.per.ranks },
{ "pdf": "Skill Ranks Phy", "foundry": actor.system.skills.phs.ranks },
{ "pdf": "Skill Ranks Pil", "foundry": actor.system.skills.pil.ranks },
{ "pdf": "Skill Ranks Pro 1", "foundry": actor.system.skills.pro.ranks },
{ "pdf": "Skill Ranks Pro 2", "foundry": actor.system.skills.pro1?.ranks || "" },
{ "pdf": "Skill Ranks Sen", "foundry": actor.system.skills.sen.ranks },
{ "pdf": "Skill Ranks Sle", "foundry": actor.system.skills.sle.ranks },
{ "pdf": "Skill Ranks Ste", "foundry": actor.system.skills.ste.ranks },
{ "pdf": "Skill Ranks Sur", "foundry": actor.system.skills.sur.ranks },
{ "pdf": "Skill Class Acr", "foundry": actor.system.skills.acr.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.acr)[0] ? 3 : 0 },
{ "pdf": "Skill Class Ath", "foundry": actor.system.skills.ath.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.ath)[0] ? 3 : 0 },
{ "pdf": "Skill Class Blu", "foundry": actor.system.skills.blu.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.blu)[0] ? 3 : 0 },
{ "pdf": "Skill Class Com", "foundry": actor.system.skills.com.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.com)[0] ? 3 : 0 },
{ "pdf": "Skill Class Cul", "foundry": actor.system.skills.cul.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.cul)[0] ? 3 : 0 },
{ "pdf": "Skill Class Dip", "foundry": actor.system.skills.dip.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.dip)[0] ? 3 : 0 },
{ "pdf": "Skill Class Dis", "foundry": actor.system.skills.dis.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.dis)[0] ? 3 : 0 },
{ "pdf": "Skill Class Eng", "foundry": actor.system.skills.eng.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.eng)[0] ? 3 : 0 },
{ "pdf": "Skill Class Int", "foundry": actor.system.skills.int.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.int)[0] ? 3 : 0 },
{ "pdf": "Skill Class Lif", "foundry": actor.system.skills.lsc.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.lsc)[0] ? 3 : 0 },
{ "pdf": "Skill Class Med", "foundry": actor.system.skills.med.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.med)[0] ? 3 : 0 },
{ "pdf": "Skill Class Mys", "foundry": actor.system.skills.mys.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.mys)[0] ? 3 : 0 },
{ "pdf": "Skill Class Per", "foundry": actor.system.skills.per.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.per)[0] ? 3 : 0 },
{ "pdf": "Skill Class Phy", "foundry": actor.system.skills.phs.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.phs)[0] ? 3 : 0 },
{ "pdf": "Skill Class Pil", "foundry": actor.system.skills.pil.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.pil)[0] ? 3 : 0 },
{ "pdf": "Skill Class Pro 1", "foundry": actor.system.skills.pro.ranks > 0 ? 3 : 0 },
{ "pdf": "Skill Class Pro 2", "foundry": actor.system.skills.pro1?.ranks > 0 ? 3 : 0 },
{ "pdf": "Skill Class Sen", "foundry": actor.system.skills.sen.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.sen)[0] ? 3 : 0 },
{ "pdf": "Skill Class Sle", "foundry": actor.system.skills.sle.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.sle)[0] ? 3 : 0 },
{ "pdf": "Skill Class Ste", "foundry": actor.system.skills.ste.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.ste)[0] ? 3 : 0 },
{ "pdf": "Skill Class Sur", "foundry": actor.system.skills.sur.ranks > 0 && actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.sur)[0] ? 3 : 0 },
{ "pdf": "Skill Ability Acr", "foundry": actor.system.abilities.dex.mod },
{ "pdf": "Skill Ability Ath", "foundry": actor.system.abilities.str.mod },
{ "pdf": "Skill Ability Blu", "foundry": actor.system.abilities.cha.mod },
{ "pdf": "Skill Ability Com", "foundry": actor.system.abilities.int.mod },
{ "pdf": "Skill Ability Cul", "foundry": actor.system.abilities.int.mod },
{ "pdf": "Skill Ability Dip", "foundry": actor.system.abilities.cha.mod },
{ "pdf": "Skill Ability Dis", "foundry": actor.system.abilities.cha.mod },
{ "pdf": "Skill Ability Eng", "foundry": actor.system.abilities.int.mod },
{ "pdf": "Skill Ability Int", "foundry": actor.system.abilities.cha.mod },
{ "pdf": "Skill Ability Lif", "foundry": actor.system.abilities.int.mod },
{ "pdf": "Skill Ability Med", "foundry": actor.system.abilities.int.mod },
{ "pdf": "Skill Ability Mys", "foundry": actor.system.abilities.wis.mod },
{ "pdf": "Skill Ability Per", "foundry": actor.system.abilities.wis.mod },
{ "pdf": "Skill Ability Phy", "foundry": actor.system.abilities.int.mod },
{ "pdf": "Skill Ability Pil", "foundry": actor.system.abilities.dex.mod },
{ "pdf": "Skill Ability Pro 1", "foundry": actor.system.skills.pro.ability === "str" ? actor.system.abilities.str.mod : actor.system.skills.pro.ability === "dex" ? actor.system.abilities.dex.mod : actor.system.skills.pro.ability === "cha" ? actor.system.abilities.cha.mod : actor.system.skills.pro.ability === "int" ? actor.system.abilities.int.mod : actor.system.skills.pro.ability === "wis" ? actor.system.abilities.wis.mod : ""},
{ "pdf": "Skill Ability Pro 2", "foundry": actor.system.skills.pro.ability === "str" ? actor.system.abilities.str.mod : actor.system.skills.pro.ability === "dex" ? actor.system.abilities.dex.mod : actor.system.skills.pro.ability === "cha" ? actor.system.abilities.cha.mod : actor.system.skills.pro.ability === "int" ? actor.system.abilities.int.mod : actor.system.skills.pro.ability === "wis" ? actor.system.abilities.wis.mod : "" },
{ "pdf": "Skill Ability Sen", "foundry": actor.system.abilities.wis.mod },
{ "pdf": "Skill Ability Sle", "foundry": actor.system.abilities.dex.mod },
{ "pdf": "Skill Ability Ste", "foundry": actor.system.abilities.dex.mod },
{ "pdf": "Skill Ability Sur", "foundry": actor.system.abilities.wis.mod },
{ "pdf": "Skill Misc Acr", "foundry": actor.system.skills.acr.misc },
{ "pdf": "Skill Misc Ath", "foundry": actor.system.skills.ath.misc },
{ "pdf": "Skill Misc Blu", "foundry": actor.system.skills.blu.misc },
{ "pdf": "Skill Misc Com", "foundry": actor.system.skills.com.misc },
{ "pdf": "Skill Misc Cul", "foundry": actor.system.skills.cul.misc },
{ "pdf": "Skill Misc Dip", "foundry": actor.system.skills.dip.misc },
{ "pdf": "Skill Misc Dis", "foundry": actor.system.skills.dis.misc },
{ "pdf": "Skill Misc Eng", "foundry": actor.system.skills.eng.misc },
{ "pdf": "Skill Misc Int", "foundry": actor.system.skills.int.misc },
{ "pdf": "Skill Misc Lif", "foundry": actor.system.skills.lsc.misc },
{ "pdf": "Skill Misc Med", "foundry": actor.system.skills.med.misc },
{ "pdf": "Skill Misc Mys", "foundry": actor.system.skills.mys.misc },
{ "pdf": "Skill Misc Per", "foundry": actor.system.skills.per.misc },
{ "pdf": "Skill Misc Phy", "foundry": actor.system.skills.phs.misc },
{ "pdf": "Skill Misc Pil", "foundry": actor.system.skills.pil.misc },
{ "pdf": "Skill Misc Pro 1", "foundry": actor.system.skills.pro.misc },
{ "pdf": "Skill Misc Pro 2", "foundry": actor.system.skills.pro1?.misc || "" },
{ "pdf": "Skill Misc Sen", "foundry": actor.system.skills.sen.misc },
{ "pdf": "Skill Misc Sle", "foundry": actor.system.skills.sle.misc },
{ "pdf": "Skill Misc Ste", "foundry": actor.system.skills.ste.misc },
{ "pdf": "Skill Misc Sur", "foundry": actor.system.skills.sur.misc },
{ "pdf": "Profession 1", "foundry": actor.system.skills.pro.subname },
{ "pdf": "Profession 2", "foundry": actor.system.skills.pro1?.subname || "" },
{ "pdf": "Skill Notes 1", "foundry": "" },
{ "pdf": "Skill Notes 2", "foundry": "" },
{ "pdf": "Skill Notes 3", "foundry": "" },
{ "pdf": "Initiative Total", "foundry": actor.system.attributes.init.total },
{ "pdf": "Initiative Dex", "foundry": actor.system.abilities.dex.mod },
{ "pdf": "Initiative Misc", "foundry": actor.system.attributes.init.bonus },
{ "pdf": "SP Total", "foundry": actor.system.attributes.sp.max },
{ "pdf": "HP Total", "foundry": actor.system.attributes.hp.max },
{ "pdf": "RP Total", "foundry": actor.system.attributes.rp.max },
{ "pdf": "SP Current", "foundry": actor.system.attributes.sp.value },
{ "pdf": "HP Current", "foundry": actor.system.attributes.hp.value },
{ "pdf": "RP Current", "foundry": actor.system.attributes.rp.value },
{ "pdf": "EAC Total", "foundry": actor.system.attributes.eac.value },
{ "pdf": "EAC Armor Bonus", "foundry": actor.items._source.filter(i => i.type === 'equipment').filter(i => i.system.equipped === true).map(i => i.system.armor.eac)[0] },
{ "pdf": "EAC Armor Dex Mod", "foundry": actor.system.abilities.dex.mod > actor.items._source.filter(i => i.type === 'equipment').filter(i => i.system.equipped === true).map(i => i.system.armor.dex)[0] ? actor.items._source.filter(i => i.type === 'equipment').filter(i => i.system.equipped === true).map(i => i.system.armor.dex)[0] : actor.system.abilities.dex.mod },
{ "pdf": "EAC Armor Misc Mod", "foundry": "" },
{ "pdf": "KAC Total", "foundry": actor.system.attributes.kac.value },
{ "pdf": "KAC Armor Bonus", "foundry": actor.items._source.filter(i => i.type === 'equipment').filter(i => i.system.equipped === true).map(i => i.system.armor.kac)[0] },
{ "pdf": "KAC Armor Dex Mod", "foundry": actor.system.abilities.dex.mod > actor.items._source.filter(i => i.type === 'equipment').filter(i => i.system.equipped === true).map(i => i.system.armor.dex)[0] ? actor.items._source.filter(i => i.type === 'equipment').filter(i => i.system.equipped === true).map(i => i.system.armor.dex)[0] : actor.system.abilities.dex.mod },
{ "pdf": "KAC Armor Misc Mod", "foundry": "" },
{ "pdf": "AC vs CM", "foundry": actor.system.attributes.cmd.value },
{ "pdf": "DR", "foundry": actor.system.traits.damageReduction.value + " / " + (actor.system.traits.damageReduction.negatedBy || "-") },
{ "pdf": "Resistances", "foundry": actor.system.traits.di.value.join(", ") || "-" },
{ "pdf": "Fort Total", "foundry": actor.system.attributes.fort.bonus },
{ "pdf": "Fort Base Save", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.fort)[0] === "fast" ? Math.floor(0.5*actor.system.details.level.value+2) : Math.floor(actor.system.details.level.value/3) },
{ "pdf": "Fort Ability Mod", "foundry": actor.system.abilities.con.mod },
{ "pdf": "Fort Misc Mod", "foundry": actor.system.attributes.fort.misc },
{ "pdf": "Reflex Total", "foundry": actor.system.attributes.reflex.bonus },
{ "pdf": "Reflex Base Save", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.reflex)[0] === "fast" ? Math.floor(0.5*actor.system.details.level.value+2) : Math.floor(actor.system.details.level.value/3) },
{ "pdf": "Reflex Ability Mod", "foundry": actor.system.abilities.dex.mod },
{ "pdf": "Reflex Misc Mod", "foundry": actor.system.attributes.reflex.misc },
{ "pdf": "Will Total", "foundry": actor.system.attributes.will.bonus },
{ "pdf": "Will Base Save", "foundry": actor.items._source.filter(i => i.type === 'class').map(i =>i.system.will)[0] === "fast" ? Math.floor(0.5*actor.system.details.level.value+2) : Math.floor(actor.system.details.level.value/3) },
{ "pdf": "Will Ability Mod", "foundry": actor.system.abilities.wis.mod },
{ "pdf": "Will Misc Mod", "foundry": actor.system.attributes.will.misc },
{ "pdf": "Base Attack Bonus", "foundry": actor.system.attributes.baseAttackBonus.value },
{ "pdf": "Melee Total", "foundry": actor.system.attributes.baseAttackBonus.value + actor.system.abilities.str.mod },
{ "pdf": "Melee BAB", "foundry": actor.system.attributes.baseAttackBonus.value },
{ "pdf": "Melee STR", "foundry": actor.system.abilities.str.mod },
{ "pdf": "Melee Misc Mod", "foundry": "" },
{ "pdf": "Ranged Total", "foundry": actor.system.attributes.baseAttackBonus.value + actor.system.abilities.dex.mod },
{ "pdf": "Ranged BAB", "foundry": actor.system.attributes.baseAttackBonus.value },
{ "pdf": "Ranged DEX", "foundry": actor.system.abilities.dex.mod },
{ "pdf": "Ranged Misc Mod", "foundry": "" },
{ "pdf": "Thrown Total", "foundry": actor.system.attributes.baseAttackBonus.value + actor.system.abilities.str.mod },
{ "pdf": "Thrown BAB", "foundry": actor.system.attributes.baseAttackBonus.value },
{ "pdf": "Thrown STR", "foundry": actor.system.abilities.str.mod },
{ "pdf": "Thrown Misc Mod", "foundry": "" },
{ "pdf": "Weapon 1", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.name || "" },
{ "pdf": "Level 1", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.level || "" },
{ "pdf": "Attack Bonus 1", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.attackBonus || "" },
{ "pdf": "Damage 1", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.damage.parts[0].formula.replace(' + \u0040abilities.str.mod', ' + ' + actor.system.abilities.str.mod) || "" },
{ "pdf": "Critical 1", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.critical.effect || "" },
{ "pdf": "Range 1", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.range.value? actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.range.value + " " + actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.range.units : " -" },
{ "pdf": "Type 1", "foundry": Object.keys(actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.damage.parts[0].types || {}) || "" },
{ "pdf": "Ammo/Usage 1", "foundry": (actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.capacity.value || "  ") + " / " + (actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.usage.value || "") },
{ "pdf": "Special 1", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.special || "" },
{ "pdf": "Weapon 2", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.name || "" },
{ "pdf": "Level 2", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.level || "" },
{ "pdf": "Attack Bonus 2", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.attackBonus || "" },
{ "pdf": "Damage 2", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.damage.parts[0].formula.replace(' + \u0040abilities.str.mod', ' + ' + actor.system.abilities.str.mod) || "" },
{ "pdf": "Critical 2", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.critical.effect || "" },
{ "pdf": "Range 2", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.range.value? actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.range.value + " " + actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.range.units : " -" },
{ "pdf": "Type 2", "foundry": Object.keys(actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.damage.parts[0].types || {}) || "" },
{ "pdf": "Ammo/Usage 2", "foundry": (actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.capacity.value || "  ") + " / " + (actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.usage.value || "") },
{ "pdf": "Special 2", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.special || "" },
{ "pdf": "Weapon 3", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.name || "" },
{ "pdf": "Level 3", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.level || "" },
{ "pdf": "Attack Bonus 3", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.attackBonus || "" },
{ "pdf": "Damage 3", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.damage.parts[0].formula.replace(' + \u0040abilities.str.mod', ' + ' + actor.system.abilities.str.mod) || "" },
{ "pdf": "Critical 3", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.critical.effect || "" },
{ "pdf": "Range 3", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.range.value? actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.range.value + " " + actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.range.units : " -" },
{ "pdf": "Type 3", "foundry": Object.keys(actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.damage.parts[0].types || {}) || "" },
{ "pdf": "Ammo/Usage 3", "foundry": (actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.capacity.value || "  ") + " / " + (actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.usage.value || "") },
{ "pdf": "Special 3", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.special || "" },
{ "pdf": "Weapon 4", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.name || "" },
{ "pdf": "Level 4", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.level || "" },
{ "pdf": "Attack Bonus 4", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.attackBonus || "" },
{ "pdf": "Damage 4", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.damage.parts[0].formula.replace(' + \u0040abilities.str.mod', ' + ' + actor.system.abilities.str.mod) || "" },
{ "pdf": "Critical 4", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.critical.effect || "" },
{ "pdf": "Range 4", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.range.value? actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.range.value + " " + actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.range.units : " -" },
{ "pdf": "Type 4", "foundry": Object.keys(actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.damage.parts[0].types || {}) || "" },
{ "pdf": "Ammo/Usage 4", "foundry": (actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.capacity.value || "  ") + " / " + (actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.usage.value || "") },
{ "pdf": "Special 4", "foundry": actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.special || "" },    /* Page #2 */{ "pdf": "Abilities 1", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[0] || "" },
{ "pdf": "Abilities 2", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[1] || "" },
{ "pdf": "Abilities 3", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[2] || "" },
{ "pdf": "Abilities 4", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[3] || "" },
{ "pdf": "Abilities 5", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[4] || "" },
{ "pdf": "Abilities 6", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[5] || "" },
{ "pdf": "Abilities 7", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[6] || "" },
{ "pdf": "Abilities 8", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[7] || "" },
{ "pdf": "Abilities 9", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[8] || "" },
{ "pdf": "Abilities 10", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[9] || "" },
{ "pdf": "Abilities 11", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[10] || "" },
{ "pdf": "Abilities 12", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[11] || "" },
{ "pdf": "Abilities 13", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[12] || "" },
{ "pdf": "Abilities 14", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[13] || "" },
{ "pdf": "Abilities 15", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[14] || "" },
{ "pdf": "Abilities 16", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[15] || "" },
{ "pdf": "Abilities 17", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[16] || "" },
{ "pdf": "Abilities 18", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[17] || "" },
{ "pdf": "Abilities 19", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[18] || "" },
{ "pdf": "Abilities 20", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short).slice(19) || "" },
{ "pdf": "Feats 1", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[0] || "" },
{ "pdf": "Feats 2", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[1] || "" },
{ "pdf": "Feats 3", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[2] || "" },
{ "pdf": "Feats 4", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[3] || "" },
{ "pdf": "Feats 5", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[4] || "" },
{ "pdf": "Feats 6", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[5] || "" },
{ "pdf": "Feats 7", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[6] || "" },
{ "pdf": "Feats 8", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[7] || "" },
{ "pdf": "Feats 9", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[8] || "" },
{ "pdf": "Feats 10", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[9] || "" },
{ "pdf": "Feats 11", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[10] || "" },
{ "pdf": "Feats 12", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[11] || "" },
{ "pdf": "Feats 13", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[12] || "" },
{ "pdf": "Feats 14", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[13] || "" },
{ "pdf": "Feats 15", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[14] || "" },
{ "pdf": "Feats 16", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[15] || "" },
{ "pdf": "Feats 17", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[16] || "" },
{ "pdf": "Feats 18", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[17] || "" },
{ "pdf": "Feats 19", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[18] || "" },
{ "pdf": "Feats 20", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[19] || "" },
{ "pdf": "Feats 21", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[20] || "" },
{ "pdf": "Feats 22", "foundry": actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short).slice(21) || "" },
{ "pdf": "Languages 1", "foundry": actor.system.traits.languages.value.filter(String).map(l => l.capitalize()).slice(1,4).sort().join(", ") || "" },
{ "pdf": "Languages 2", "foundry": actor.system.traits.languages.value.filter(String).map(l => l.capitalize()).slice(4,7).sort().join(", ") || "" },
{ "pdf": "Languages 3", "foundry": actor.system.traits.languages.value.filter(String).map(l => l.capitalize()).slice(7).sort().join(", ") || "" },
{ "pdf": "Languages 4", "foundry": actor.system.traits.languages.custom },
{ "pdf": "Equipment 1", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[0] || "" },
{ "pdf": "Equipment 2", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[1] || "" },
{ "pdf": "Equipment 3", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[2] || "" },
{ "pdf": "Equipment 4", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[3] || "" },
{ "pdf": "Equipment 5", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[4] || "" },
{ "pdf": "Equipment 6", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[5] || "" },
{ "pdf": "Equipment 7", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[6] || "" },
{ "pdf": "Equipment 8", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[7] || "" },
{ "pdf": "Equipment 9", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[8] || "" },
{ "pdf": "Equipment 10", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[9] || "" },
{ "pdf": "Equipment 11", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[10] || "" },
{ "pdf": "Equipment 12", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[11] || "" },
{ "pdf": "Equipment 13", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[12] || "" },
{ "pdf": "Equipment 14", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[13] || "" },
{ "pdf": "Equipment 15", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[14] || "" },
{ "pdf": "Equipment Level 1", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[0] || "" },
{ "pdf": "Equipment Level 2", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[1] || "" },
{ "pdf": "Equipment Level 3", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[2] || "" },
{ "pdf": "Equipment Level 4", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[3] || "" },
{ "pdf": "Equipment Level 5", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[4] || "" },
{ "pdf": "Equipment Level 6", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[5] || "" },
{ "pdf": "Equipment Level 7", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[6] || "" },
{ "pdf": "Equipment Level 8", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[7] || "" },
{ "pdf": "Equipment Level 9", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[8] || "" },
{ "pdf": "Equipment Level 10", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[9] || "" },
{ "pdf": "Equipment Level 11", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[10] || "" },
{ "pdf": "Equipment Level 12", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[11] || "" },
{ "pdf": "Equipment Level 13", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[12] || "" },
{ "pdf": "Equipment Level 14", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[13] || "" },
{ "pdf": "Equipment Level 15", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[14] || "" },
{ "pdf": "Equipment Bulk 1", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[0] || "" },
{ "pdf": "Equipment Bulk 2", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[1] || "" },
{ "pdf": "Equipment Bulk 3", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[2] || "" },
{ "pdf": "Equipment Bulk 4", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[3] || "" },
{ "pdf": "Equipment Bulk 5", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[4] || "" },
{ "pdf": "Equipment Bulk 6", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[5] || "" },
{ "pdf": "Equipment Bulk 7", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[6] || "" },
{ "pdf": "Equipment Bulk 8", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[7] || "" },
{ "pdf": "Equipment Bulk 9", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[8] || "" },
{ "pdf": "Equipment Bulk 10", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[9] || "" },
{ "pdf": "Equipment Bulk 11", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[10] || "" },
{ "pdf": "Equipment Bulk 12", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[11] || "" },
{ "pdf": "Equipment Bulk 13", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[12] || "" },
{ "pdf": "Equipment Bulk 14", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[13] || "" },
{ "pdf": "Equipment Bulk 15", "foundry": actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[14] || "" },
{ "pdf": "Credits", "foundry": actor.system.currency.credit },
{ "pdf": "Total Bulk", "foundry": actor.system.bulk },
{ "pdf": "Other Wealth 1", "foundry": "UPB: " + actor.system.currency.upb },
{ "pdf": "Other Wealth 2", "foundry": "Wealth total: " + actor.system.wealth.total },
{ "pdf": "Other Wealth 3", "foundry": "" },
{ "pdf": "Unencumbered", "foundry": actor.system.abilities.str.value/2 },
{ "pdf": "Encumbered", "foundry": actor.system.abilities.str.value },
{ "pdf": "Overburdened", "foundry": actor.system.abilities.str.value + "+" },
{ "pdf": "XP Earned", "foundry": actor.system.details.xp.value },
{ "pdf": "Next Level", "foundry": actor.system.details.xp.max },
{ "pdf": "0 Spells Know", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 0).length || "-" },
{ "pdf": "Spell 0-1", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 0).map(i =>i.name + ", " + i.system.source)[0] || ""},
{ "pdf": "Spell 0-2", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 0).map(i =>i.name + ", " + i.system.source)[1] || "" },
{ "pdf": "Spell 0-3", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 0).map(i =>i.name + ", " + i.system.source)[2] || "" },
{ "pdf": "Spell 0-4", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 0).map(i =>i.name + ", " + i.system.source)[3] || "" },
{ "pdf": "Spell 0-5", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 0).map(i =>i.name + ", " + i.system.source)[4] || "" },
{ "pdf": "Spell 0-6", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 0).map(i =>i.name + ", " + i.system.source).slice(5) || "" },
{ "pdf": "1st Spells Known", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 1).length || "-"},
{ "pdf": "1st Spells Per Day", "foundry": actor.system.spells.spell1.max },
{ "pdf": "1st Spell Slots Used", "foundry": actor.system.spells.spell1.value },
{ "pdf": "Spell 1-1", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 1).map(i =>i.name + ", " + i.system.source)[0] || "" },
{ "pdf": "Spell 1-2", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 1).map(i =>i.name + ", " + i.system.source)[1] || "" },
{ "pdf": "Spell 1-3", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 1).map(i =>i.name + ", " + i.system.source)[2] || "" },
{ "pdf": "Spell 1-4", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 1).map(i =>i.name + ", " + i.system.source)[3] || "" },
{ "pdf": "Spell 1-5", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 1).map(i =>i.name + ", " + i.system.source)[4] || "" },
{ "pdf": "Spell 1-6", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 1).map(i =>i.name + ", " + i.system.source).slice(5) || "" },
{ "pdf": "2nd Spells Known", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 2).length || "-" },
{ "pdf": "2nd Spells Per Day", "foundry": actor.system.spells.spell2.max },
{ "pdf": "2nd Spell Slots Used", "foundry": actor.system.spells.spell2.value },
{ "pdf": "Spell 2-1", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 2).map(i =>i.name + ", " + i.system.source)[0] || "" },
{ "pdf": "Spell 2-2", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 2).map(i =>i.name + ", " + i.system.source)[1] || "" },
{ "pdf": "Spell 2-3", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 2).map(i =>i.name + ", " + i.system.source)[2] || "" },
{ "pdf": "Spell 2-4", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 2).map(i =>i.name + ", " + i.system.source)[3] || "" },
{ "pdf": "Spell 2-5", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 2).map(i =>i.name + ", " + i.system.source)[4] || "" },
{ "pdf": "Spell 2-6", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 2).map(i =>i.name + ", " + i.system.source).slice(5) || "" },
{ "pdf": "3rd Spells Known", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 3).length || "-" },
{ "pdf": "3rd Spells Per Day", "foundry": actor.system.spells.spell3.max },
{ "pdf": "3rd Spell Slots Used", "foundry": actor.system.spells.spell3.value },
{ "pdf": "Spell 3-1", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 3).map(i =>i.name + ", " + i.system.source)[0] || "" },
{ "pdf": "Spell 3-2", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 3).map(i =>i.name + ", " + i.system.source)[1] || "" },
{ "pdf": "Spell 3-3", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 3).map(i =>i.name + ", " + i.system.source)[2] || "" },
{ "pdf": "Spell 3-4", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 3).map(i =>i.name + ", " + i.system.source)[3] || "" },
{ "pdf": "Spell 3-5", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 3).map(i =>i.name + ", " + i.system.source)[4] || "" },
{ "pdf": "Spell 3-6", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 3).map(i =>i.name + ", " + i.system.source).slice(5) || "" },
{ "pdf": "4th Spells Known", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 4).length || "-" },
{ "pdf": "4th Spells Per Day", "foundry": actor.system.spells.spell4.max },
{ "pdf": "4th Spell Slots Used", "foundry": actor.system.spells.spell4.value },
{ "pdf": "Spell 4-1", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 4).map(i =>i.name + ", " + i.system.source)[0] || "" },
{ "pdf": "Spell 4-2", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 4).map(i =>i.name + ", " + i.system.source)[1] || "" },
{ "pdf": "Spell 4-3", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 4).map(i =>i.name + ", " + i.system.source)[2] || "" },
{ "pdf": "Spell 4-4", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 4).map(i =>i.name + ", " + i.system.source)[3] || "" },
{ "pdf": "Spell 4-5", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 4).map(i =>i.name + ", " + i.system.source).slice(4) || "" },
{ "pdf": "5th Spells Known", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 5).length || "-" },
{ "pdf": "5th Spells Per Day", "foundry": actor.system.spells.spell5.max },
{ "pdf": "5th Spell Slots Used", "foundry": actor.system.spells.spell5.value },
{ "pdf": "Spell 5-1", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 5).map(i =>i.name + ", " + i.system.source)[0] || "" },
{ "pdf": "Spell 5-2", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 5).map(i =>i.name + ", " + i.system.source)[1] || "" },
{ "pdf": "Spell 5-3", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 5).map(i =>i.name + ", " + i.system.source)[2] || "" },
{ "pdf": "Spell 5-4", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 5).map(i =>i.name + ", " + i.system.source).slice(3) || "" },
{ "pdf": "6th Spells Known", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 6).length || "-" },
{ "pdf": "6th Spells Per Day", "foundry": actor.system.spells.spell6.max },
{ "pdf": "6th Spell Slots Used", "foundry": actor.system.spells.spell6.value },
{ "pdf": "Spell 6-1", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 6).map(i =>i.name + ", " + i.system.source)[0] || "" },
{ "pdf": "Spell 6-2", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 6).map(i =>i.name + ", " + i.system.source)[1] || "" },
{ "pdf": "Spell 6-3", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 6).map(i =>i.name + ", " + i.system.source)[2] || "" },
{ "pdf": "Spell 6-4", "foundry": actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 6).map(i =>i.name + ", " + i.system.source).slice(3) || "" },]